#lang racket

;***************************************************************************
; El primer bloque de codigo ejecuta el llamado a las librerias requeridas *__________________________________________________________________________________
; y dibuja el tablero de ajedrez                                           *
;***************************************************************************


;(require (lib "graphics.ss" "graphics"))
(require (lib "graphics"))
(open-graphics)
 
 (define ventana1 (open-viewport "AJEDREZ" 600 600))


((draw-solid-rectangle ventana1) (make-posn 50 100) 50 50 "gray")
((draw-solid-rectangle ventana1) (make-posn 50 200) 50 50 "gray")
((draw-solid-rectangle ventana1) (make-posn 50 300) 50 50 "gray")
((draw-solid-rectangle ventana1) (make-posn 50 400) 50 50 "gray") 
((draw-solid-rectangle ventana1) (make-posn 100 50) 50 50 "gray")
((draw-solid-rectangle ventana1) (make-posn 100 150) 50 50 "gray")
((draw-solid-rectangle ventana1) (make-posn 100 250) 50 50 "gray")
((draw-solid-rectangle ventana1) (make-posn 100 350) 50 50 "gray")
((draw-solid-rectangle ventana1) (make-posn 150 100) 50 50 "gray")
((draw-solid-rectangle ventana1) (make-posn 150 200) 50 50 "gray")
((draw-solid-rectangle ventana1) (make-posn 150 300) 50 50 "gray")
((draw-solid-rectangle ventana1) (make-posn 150 400) 50 50 "gray")
((draw-solid-rectangle ventana1) (make-posn 200 50) 50 50 "gray")
((draw-solid-rectangle ventana1) (make-posn 200 150) 50 50 "gray")
((draw-solid-rectangle ventana1) (make-posn 200 250) 50 50 "gray")
((draw-solid-rectangle ventana1) (make-posn 200 350) 50 50 "gray")
((draw-solid-rectangle ventana1) (make-posn 250 100) 50 50 "gray")
((draw-solid-rectangle ventana1) (make-posn 250 200) 50 50 "gray")
((draw-solid-rectangle ventana1) (make-posn 250 300) 50 50 "gray")
((draw-solid-rectangle ventana1) (make-posn 250 400) 50 50 "gray")
((draw-solid-rectangle ventana1) (make-posn 300 50) 50 50 "gray")
((draw-solid-rectangle ventana1) (make-posn 300 150) 50 50 "gray")
((draw-solid-rectangle ventana1) (make-posn 300 250) 50 50 "gray")
((draw-solid-rectangle ventana1) (make-posn 300 350) 50 50 "gray")
((draw-solid-rectangle ventana1) (make-posn 350 100) 50 50 "gray")
((draw-solid-rectangle ventana1) (make-posn 350 200) 50 50 "gray")
((draw-solid-rectangle ventana1) (make-posn 350 300) 50 50 "gray")
((draw-solid-rectangle ventana1) (make-posn 350 400) 50 50 "gray")
((draw-solid-rectangle ventana1) (make-posn 400 50) 50 50 "gray")
((draw-solid-rectangle ventana1) (make-posn 400 150) 50 50 "gray")
((draw-solid-rectangle ventana1) (make-posn 400 250) 50 50 "gray")
((draw-solid-rectangle ventana1) (make-posn 400 350) 50 50 "gray")
((draw-solid-rectangle ventana1) (make-posn 50 50) 50 50 "White")
((draw-solid-rectangle ventana1) (make-posn 50 150) 50 50 "white")
((draw-solid-rectangle ventana1) (make-posn 50 250) 50 50 "white")
((draw-solid-rectangle ventana1) (make-posn 50 350) 50 50 "white") 
((draw-solid-rectangle ventana1) (make-posn 100 100) 50 50 "white")
((draw-solid-rectangle ventana1) (make-posn 100 200) 50 50 "white")
((draw-solid-rectangle ventana1) (make-posn 100 300) 50 50 "white")
((draw-solid-rectangle ventana1) (make-posn 100 400) 50 50 "white")
((draw-solid-rectangle ventana1) (make-posn 150 50) 50 50 "white")
((draw-solid-rectangle ventana1) (make-posn 150 150) 50 50 "white")
((draw-solid-rectangle ventana1) (make-posn 150 250) 50 50 "white")
((draw-solid-rectangle ventana1) (make-posn 150 350) 50 50 "white")
((draw-solid-rectangle ventana1) (make-posn 200 100) 50 50 "white")
((draw-solid-rectangle ventana1) (make-posn 200 200) 50 50 "white")
((draw-solid-rectangle ventana1) (make-posn 200 300) 50 50 "white")
((draw-solid-rectangle ventana1) (make-posn 200 400) 50 50 "white")
((draw-solid-rectangle ventana1) (make-posn 250 50) 50 50 "white")
((draw-solid-rectangle ventana1) (make-posn 250 150) 50 50 "white")
((draw-solid-rectangle ventana1) (make-posn 250 250) 50 50 "white")
((draw-solid-rectangle ventana1) (make-posn 250 350) 50 50 "white")
((draw-solid-rectangle ventana1) (make-posn 300 100) 50 50 "white")
((draw-solid-rectangle ventana1) (make-posn 300 200) 50 50 "white")
((draw-solid-rectangle ventana1) (make-posn 300 300) 50 50 "white")
((draw-solid-rectangle ventana1) (make-posn 300 400) 50 50 "white")
((draw-solid-rectangle ventana1) (make-posn 350 50) 50 50 "white")
((draw-solid-rectangle ventana1) (make-posn 350 150) 50 50 "white")
((draw-solid-rectangle ventana1) (make-posn 350 250) 50 50 "white")
((draw-solid-rectangle ventana1) (make-posn 350 350) 50 50 "white")
((draw-solid-rectangle ventana1) (make-posn 400 100) 50 50 "white")
((draw-solid-rectangle ventana1) (make-posn 400 200) 50 50 "white")
((draw-solid-rectangle ventana1) (make-posn 400 300) 50 50 "white")
((draw-solid-rectangle ventana1) (make-posn 400 400) 50 50 "white")
((draw-rectangle ventana1) (make-posn 50 50) 400 400 "black")

(((draw-pixmap-posn "torre.gif" 'gif/mask) ventana1)(make-posn 60 400 ))
(((draw-pixmap-posn "torre.gif" 'gif/mask) ventana1)(make-posn 410 400 ))

(((draw-pixmap-posn "torre2.gif" 'gif/mask) ventana1)(make-posn 60 50 ))
(((draw-pixmap-posn "torre2.gif" 'gif/mask) ventana1)(make-posn 410 50 ))

(((draw-pixmap-posn "caballo.gif" 'gif/mask) ventana1)(make-posn 110 400 ))
(((draw-pixmap-posn "caballo.gif" 'gif/mask) ventana1)(make-posn 360 400 ))

(((draw-pixmap-posn "caballo2.gif" 'gif/mask) ventana1)(make-posn 110 50 ))
(((draw-pixmap-posn "caballo2.gif" 'gif/mask) ventana1)(make-posn 360 50 ))

(((draw-pixmap-posn "alfil.gif" 'gif/mask) ventana1)(make-posn 160 400 ))
(((draw-pixmap-posn "alfil.gif" 'gif/mask) ventana1)(make-posn 310 400 ))

(((draw-pixmap-posn "alfil2.gif" 'gif/mask) ventana1)(make-posn 160 50 ))
(((draw-pixmap-posn "alfil2.gif" 'gif/mask) ventana1)(make-posn 310 50 ))

(((draw-pixmap-posn "rey.gif" 'gif/mask) ventana1)(make-posn 260 400 ))
(((draw-pixmap-posn "reina.gif" 'gif/mask) ventana1)(make-posn 210 400 ))

(((draw-pixmap-posn "rey2.gif" 'gif/mask) ventana1)(make-posn 260 50 ))
(((draw-pixmap-posn "reina2.gif" 'gif/mask) ventana1)(make-posn 210 50 ))

(((draw-pixmap-posn "peon.gif" 'gif/mask) ventana1)(make-posn 60 350 ))
(((draw-pixmap-posn "peon.gif" 'gif/mask) ventana1)(make-posn 110 350 ))
(((draw-pixmap-posn "peon.gif" 'gif/mask) ventana1)(make-posn 160 350 ))
(((draw-pixmap-posn "peon.gif" 'gif/mask) ventana1)(make-posn 210 350 ))
(((draw-pixmap-posn "peon.gif" 'gif/mask) ventana1)(make-posn 260 350 ))
(((draw-pixmap-posn "peon.gif" 'gif/mask) ventana1)(make-posn 310 350 ))
(((draw-pixmap-posn "peon.gif" 'gif/mask) ventana1)(make-posn 360 350 ))
(((draw-pixmap-posn "peon.gif" 'gif/mask) ventana1)(make-posn 410 350 ))

(((draw-pixmap-posn "peon2.gif" 'gif/mask) ventana1)(make-posn 60 100 ))
(((draw-pixmap-posn "peon2.gif" 'gif/mask) ventana1)(make-posn 110 100 ))
(((draw-pixmap-posn "peon2.gif" 'gif/mask) ventana1)(make-posn 160 100 ))
(((draw-pixmap-posn "peon2.gif" 'gif/mask) ventana1)(make-posn 210 100 ))
(((draw-pixmap-posn "peon2.gif" 'gif/mask) ventana1)(make-posn 260 100 ))
(((draw-pixmap-posn "peon2.gif" 'gif/mask) ventana1)(make-posn 310 100 ))
(((draw-pixmap-posn "peon2.gif" 'gif/mask) ventana1)(make-posn 360 100 ))
(((draw-pixmap-posn "peon2.gif" 'gif/mask) ventana1)(make-posn 410 100 ))


;***********************************************************************
; Segundo bloque de codigo encargado de definir las posiciones de cada *
; cuadro del tablero y crear los vectores que contienen la informacion *________________________________________________________________________________________________
; de la posicion, son exactamente 64 posiciones                        *
;***********************************************************************

 (define h1(make-posn 410 400))
 (define h2(make-posn 410 350))
 (define h3(make-posn 410 300))
 (define h4(make-posn 410 250))
 (define h5(make-posn 410 200))
 (define h6(make-posn 410 150))
 (define h7(make-posn 410 100))
 (define h8(make-posn 410 50))
 (define g1(make-posn 360 400))
 (define g2(make-posn 360 350))
 (define g3(make-posn 360 300))
 (define g4(make-posn 360 250))
 (define g5(make-posn 360 200))
 (define g6(make-posn 360 150))
 (define g7(make-posn 360 100))
 (define g8(make-posn 360 50))
 (define f1(make-posn 310 400))
 (define f2(make-posn 310 350))
 (define f3(make-posn 310 300))
 (define f4(make-posn 310 250))
 (define f5(make-posn 310 200))
 (define f6(make-posn 310 150))
 (define f7(make-posn 310 100))
 (define f8(make-posn 310 50))
 (define e1(make-posn 260 400))
 (define e2(make-posn 260 350))
 (define e3(make-posn 260 300))
 (define e4(make-posn 260 250))
 (define e5(make-posn 260 200))
 (define e6(make-posn 260 150))
 (define e7(make-posn 260 100))
 (define e8(make-posn 260 50))
 (define d1(make-posn 210 400))
 (define d2(make-posn 210 350))
 (define d3(make-posn 210 300))
 (define d4(make-posn 210 250))
 (define d5(make-posn 210 200))
 (define d6(make-posn 210 150))
 (define d7(make-posn 210 100))
 (define d8(make-posn 210 50))
 (define c1(make-posn 160 400))
 (define c2(make-posn 160 350))
 (define c3(make-posn 160 300))
 (define c4(make-posn 160 250))
 (define c5(make-posn 160 200))
 (define c6(make-posn 160 150))
 (define c7(make-posn 160 100))
 (define c8(make-posn 160 50))
 (define b1(make-posn 110 400))
 (define b2(make-posn 110 350))
 (define b3(make-posn 110 300))
 (define b4(make-posn 110 250))
 (define b5(make-posn 110 200))
 (define b6(make-posn 110 150))
 (define b7(make-posn 110 100))
 (define b8(make-posn 110 50))
 (define a1(make-posn 60 400))
 (define a2(make-posn 60 350))
 (define a3(make-posn 60 300))
 (define a4(make-posn 60 250))
 (define a5(make-posn 60 200))
 (define a6(make-posn 60 150))
 (define a7(make-posn 60 100))
 (define a8(make-posn 60 50))
 (define vacio(vector "vacio.gif"))
 (define blancas(vector "peon.gif" "torre.gif" "caballo.gif" "alfil.gif" "reina.gif" "rey.gif"))
 (define negras(vector "peon2.gif" "torre2.gif" "caballo2.gif" "alfil2.gif" "reina2.gif" "rey2.gif"))
 (define abcisas(vector 50 100 150 200 250 300 350 400 450))
 (define ordenadas(vector 50 100 150 200 250 300 350 400 450))
 (define posiciones(vector a8 a7 a6 a5 a4 a3 a2 a1 b8 b7 b6 b5 b4 b3 b2 b1 c8 c7 c6 c5 c4 c3 c2 c1 d8 d7 d6 d5 d4 d3 d2 d1
                           e8 e7 e6 e5 e4 e3 e2 e1 f8 f7 f6 f5 f4 f3 f2 f1 g8 g7 g6 g5 g4 g3 g2 g1 h8 h7 h6 h5 h4 h3 h2 h1))
 
;***********************************************************************************
; Vectores con la posicion de las fichas al iniciar estan cargados por defecto con * 
; la posicion inicial de las fichas "matriz tablero"                               *______________________________________________________________________________________________________________________
;***********************************************************************************

(define ocho(vector (vector-ref negras 1) (vector-ref negras 2)(vector-ref negras 3)(vector-ref negras 4)(vector-ref negras 5)(vector-ref negras 3)(vector-ref negras 2)(vector-ref negras 1)))
(define siete(vector (vector-ref negras 0) (vector-ref negras 0)(vector-ref negras 0)(vector-ref negras 0)(vector-ref negras 0)(vector-ref negras 0)(vector-ref negras 0)(vector-ref negras 0)))
(define seis(vector (vector-ref vacio 0) (vector-ref vacio 0) (vector-ref vacio 0) (vector-ref vacio 0) (vector-ref vacio 0) (vector-ref vacio 0) (vector-ref vacio 0)(vector-ref vacio 0)))
(define cinco(vector (vector-ref vacio 0) (vector-ref vacio 0) (vector-ref vacio 0) (vector-ref vacio 0) (vector-ref vacio 0) (vector-ref vacio 0) (vector-ref vacio 0)(vector-ref vacio 0)))
(define cuatro(vector (vector-ref vacio 0) (vector-ref vacio 0) (vector-ref vacio 0) (vector-ref vacio 0) (vector-ref vacio 0) (vector-ref vacio 0) (vector-ref vacio 0)(vector-ref vacio 0)))
(define tres(vector (vector-ref vacio 0) (vector-ref vacio 0) (vector-ref vacio 0) (vector-ref vacio 0) (vector-ref vacio 0) (vector-ref vacio 0) (vector-ref vacio 0)(vector-ref vacio 0)))
(define dos(vector (vector-ref blancas 0)(vector-ref blancas 0)(vector-ref blancas 0)(vector-ref blancas 0)(vector-ref blancas 0)(vector-ref blancas 0)(vector-ref blancas 0)(vector-ref blancas 0)))
(define uno(vector (vector-ref blancas 1) (vector-ref blancas 2)(vector-ref blancas 3)(vector-ref blancas 4)(vector-ref blancas 5)(vector-ref blancas 3)(vector-ref blancas 2)(vector-ref blancas 1)))
(define vectors(vector uno dos tres cuatro cinco seis siete ocho))

;*******************************************************************************
; Esta funcion establece un dibujo de la imagen establecida en la  posicion en *__________________________________________________________________________________- 
; donde se le da click si es que esta en la matriz tablero                     *
;*******************************************************************************

(define (dibujar x)
  (cond
    ((equal? x a1)(((draw-pixmap-posn (vector-ref (vector-ref vectors 0)0) 'gif/mask) ventana1)a1))
    ((equal? x a2)(((draw-pixmap-posn (vector-ref (vector-ref vectors 1)0) 'gif/mask) ventana1)a2))
    ((equal? x a3)(((draw-pixmap-posn (vector-ref (vector-ref vectors 2)0) 'gif/mask) ventana1)a3))
    ((equal? x a4)(((draw-pixmap-posn (vector-ref (vector-ref vectors 3)0) 'gif/mask) ventana1)a4))
    ((equal? x a5)(((draw-pixmap-posn (vector-ref (vector-ref vectors 4)0) 'gif/mask) ventana1)a5))
    ((equal? x a6)(((draw-pixmap-posn (vector-ref (vector-ref vectors 5)0) 'gif/mask) ventana1)a6))
    ((equal? x a7)(((draw-pixmap-posn (vector-ref (vector-ref vectors 6)0) 'gif/mask) ventana1)a7))
    ((equal? x a8)(((draw-pixmap-posn (vector-ref (vector-ref vectors 7)0) 'gif/mask) ventana1)a8))
    ((equal? x b1)(((draw-pixmap-posn (vector-ref (vector-ref vectors 0)1) 'gif/mask) ventana1)b1))
    ((equal? x b2)(((draw-pixmap-posn (vector-ref (vector-ref vectors 1)1) 'gif/mask) ventana1)b2))
    ((equal? x b3)(((draw-pixmap-posn (vector-ref (vector-ref vectors 2)1) 'gif/mask) ventana1)b3))
    ((equal? x b4)(((draw-pixmap-posn (vector-ref (vector-ref vectors 3)1) 'gif/mask) ventana1)b4))
    ((equal? x b5)(((draw-pixmap-posn (vector-ref (vector-ref vectors 4)1) 'gif/mask) ventana1)b5))
    ((equal? x b6)(((draw-pixmap-posn (vector-ref (vector-ref vectors 5)1) 'gif/mask) ventana1)b6))
    ((equal? x b7)(((draw-pixmap-posn (vector-ref (vector-ref vectors 6)1) 'gif/mask) ventana1)b7))
    ((equal? x b8)(((draw-pixmap-posn (vector-ref (vector-ref vectors 7)1) 'gif/mask) ventana1)b8))
    ((equal? x c1)(((draw-pixmap-posn (vector-ref (vector-ref vectors 0)2) 'gif/mask) ventana1)c1))
    ((equal? x c2)(((draw-pixmap-posn (vector-ref (vector-ref vectors 1)2) 'gif/mask) ventana1)c2))
    ((equal? x c3)(((draw-pixmap-posn (vector-ref (vector-ref vectors 2)2) 'gif/mask) ventana1)c3))
    ((equal? x c4)(((draw-pixmap-posn (vector-ref (vector-ref vectors 3)2) 'gif/mask) ventana1)c4))
    ((equal? x c5)(((draw-pixmap-posn (vector-ref (vector-ref vectors 4)2) 'gif/mask) ventana1)c5))
    ((equal? x c6)(((draw-pixmap-posn (vector-ref (vector-ref vectors 5)2) 'gif/mask) ventana1)c6))
    ((equal? x c7)(((draw-pixmap-posn (vector-ref (vector-ref vectors 6)2) 'gif/mask) ventana1)c7))
    ((equal? x c8)(((draw-pixmap-posn (vector-ref (vector-ref vectors 7)2) 'gif/mask) ventana1)c8))
    ((equal? x d1)(((draw-pixmap-posn (vector-ref (vector-ref vectors 0)3) 'gif/mask) ventana1)d1))
    ((equal? x d2)(((draw-pixmap-posn (vector-ref (vector-ref vectors 1)3) 'gif/mask) ventana1)d2))
    ((equal? x d3)(((draw-pixmap-posn (vector-ref (vector-ref vectors 2)3) 'gif/mask) ventana1)d3))
    ((equal? x d4)(((draw-pixmap-posn (vector-ref (vector-ref vectors 3)3) 'gif/mask) ventana1)d4))
    ((equal? x d5)(((draw-pixmap-posn (vector-ref (vector-ref vectors 4)3) 'gif/mask) ventana1)d5))
    ((equal? x d6)(((draw-pixmap-posn (vector-ref (vector-ref vectors 5)3) 'gif/mask) ventana1)d6))
    ((equal? x d7)(((draw-pixmap-posn (vector-ref (vector-ref vectors 6)3) 'gif/mask) ventana1)d7))
    ((equal? x d8)(((draw-pixmap-posn (vector-ref (vector-ref vectors 7)3) 'gif/mask) ventana1)d8))
    ((equal? x e1)(((draw-pixmap-posn (vector-ref (vector-ref vectors 0)4) 'gif/mask) ventana1)e1))
    ((equal? x e2)(((draw-pixmap-posn (vector-ref (vector-ref vectors 1)4) 'gif/mask) ventana1)e2))
    ((equal? x e3)(((draw-pixmap-posn (vector-ref (vector-ref vectors 2)4) 'gif/mask) ventana1)e3))
    ((equal? x e4)(((draw-pixmap-posn (vector-ref (vector-ref vectors 3)4) 'gif/mask) ventana1)e4))
    ((equal? x e5)(((draw-pixmap-posn (vector-ref (vector-ref vectors 4)4) 'gif/mask) ventana1)e5))
    ((equal? x e6)(((draw-pixmap-posn (vector-ref (vector-ref vectors 5)4) 'gif/mask) ventana1)e6))
    ((equal? x e7)(((draw-pixmap-posn (vector-ref (vector-ref vectors 6)4) 'gif/mask) ventana1)e7))
    ((equal? x e8)(((draw-pixmap-posn (vector-ref (vector-ref vectors 7)4) 'gif/mask) ventana1)e8))
    ((equal? x f1)(((draw-pixmap-posn (vector-ref (vector-ref vectors 0)5) 'gif/mask) ventana1)f1))
    ((equal? x f2)(((draw-pixmap-posn (vector-ref (vector-ref vectors 1)5) 'gif/mask) ventana1)f2))
    ((equal? x f3)(((draw-pixmap-posn (vector-ref (vector-ref vectors 2)5) 'gif/mask) ventana1)f3))
    ((equal? x f4)(((draw-pixmap-posn (vector-ref (vector-ref vectors 3)5) 'gif/mask) ventana1)f4))
    ((equal? x f5)(((draw-pixmap-posn (vector-ref (vector-ref vectors 4)5) 'gif/mask) ventana1)f5))
    ((equal? x f6)(((draw-pixmap-posn (vector-ref (vector-ref vectors 5)5) 'gif/mask) ventana1)f6))
    ((equal? x f7)(((draw-pixmap-posn (vector-ref (vector-ref vectors 6)5) 'gif/mask) ventana1)f7))
    ((equal? x f8)(((draw-pixmap-posn (vector-ref (vector-ref vectors 7)5) 'gif/mask) ventana1)f8))
    ((equal? x g1)(((draw-pixmap-posn (vector-ref (vector-ref vectors 0)6) 'gif/mask) ventana1)g1))
    ((equal? x g2)(((draw-pixmap-posn (vector-ref (vector-ref vectors 1)6) 'gif/mask) ventana1)g2))
    ((equal? x g3)(((draw-pixmap-posn (vector-ref (vector-ref vectors 2)6) 'gif/mask) ventana1)g3))
    ((equal? x g4)(((draw-pixmap-posn (vector-ref (vector-ref vectors 3)6) 'gif/mask) ventana1)g4))
    ((equal? x g5)(((draw-pixmap-posn (vector-ref (vector-ref vectors 4)6) 'gif/mask) ventana1)g5))
    ((equal? x g6)(((draw-pixmap-posn (vector-ref (vector-ref vectors 5)6) 'gif/mask) ventana1)g6))
    ((equal? x g7)(((draw-pixmap-posn (vector-ref (vector-ref vectors 6)6) 'gif/mask) ventana1)g7))
    ((equal? x g8)(((draw-pixmap-posn (vector-ref (vector-ref vectors 7)6) 'gif/mask) ventana1)g8))
    ((equal? x h1)(((draw-pixmap-posn (vector-ref (vector-ref vectors 0)7) 'gif/mask) ventana1)h1))
    ((equal? x h2)(((draw-pixmap-posn (vector-ref (vector-ref vectors 1)7) 'gif/mask) ventana1)h2))
    ((equal? x h3)(((draw-pixmap-posn (vector-ref (vector-ref vectors 2)7) 'gif/mask) ventana1)h3))
    ((equal? x h4)(((draw-pixmap-posn (vector-ref (vector-ref vectors 3)7) 'gif/mask) ventana1)h4))
    ((equal? x h5)(((draw-pixmap-posn (vector-ref (vector-ref vectors 4)7) 'gif/mask) ventana1)h5))
    ((equal? x h6)(((draw-pixmap-posn (vector-ref (vector-ref vectors 5)7) 'gif/mask) ventana1)h6))
    ((equal? x h7)(((draw-pixmap-posn (vector-ref (vector-ref vectors 6)7) 'gif/mask) ventana1)h7))
    ((equal? x h8)(((draw-pixmap-posn (vector-ref (vector-ref vectors 7)7) 'gif/mask) ventana1)h8))
    (else "fin")
   )
)
;*********************************************************************************
; convierte coordenadas dadas en posiciones de forma "x" "y" y las transforma en *___________________________________________________________________________
; coordenadas establecidas                                                       *
;*********************************************************************************

(define (convertir x y)

  (cond
 ((and (= x 410)(= y 400)) h1)
 ((and (= x 410)(= y 350)) h2)
 ((and (= x 410)(= y 300)) h3)
 ((and (= x 410)(= y 250)) h4)
 ((and (= x 410)(= y 200)) h5)
 ((and (= x 410)(= y 150)) h6)
 ((and (= x 410)(= y 100)) h7)
 ((and (= x 410)(= y 50)) h8)
 ((and (= x 360)(= y 400)) g1)
 ((and (= x 360)(= y 350)) g2)
 ((and (= x 360)(= y 300)) g3)
 ((and (= x 360)(= y 250)) g4)
 ((and (= x 360)(= y 200)) g5)
 ((and (= x 360)(= y 150)) g6)
 ((and (= x 360)(= y 100)) g7)
 ((and (= x 360)(= y 50)) g8)
 ((and (= x 310)(= y 400)) f1)
 ((and (= x 310)(= y 350)) f2)
 ((and (= x 310)(= y 300)) f3)
 ((and (= x 310)(= y 250)) f4)
 ((and (= x 310)(= y 200)) f5)
 ((and (= x 310)(= y 150)) f6)
 ((and (= x 310)(= y 100)) f7)
 ((and (= x 310)(= y 50)) f8)
 ((and (= x 260)(= y 400)) e1)
 ((and (= x 260)(= y 350)) e2)
 ((and (= x 260)(= y 300)) e3)
 ((and (= x 260)(= y 250)) e4)
 ((and (= x 260)(= y 200)) e5)
 ((and (= x 260)(= y 150)) e6)
 ((and (= x 260)(= y 100)) e7)
 ((and (= x 260)(= y 50)) e8)
 ((and (= x 210)(= y 400)) d1)
 ((and (= x 210)(= y 350)) d2)
 ((and (= x 210)(= y 300)) d3)
 ((and (= x 210)(= y 250)) d4)
 ((and (= x 210)(= y 200)) d5)
 ((and (= x 210)(= y 150)) d6)
 ((and (= x 210)(= y 100)) d7)
 ((and (= x 210)(= y 50)) d8)
 ((and (= x 160)(= y 400)) c1)
 ((and (= x 160)(= y 350)) c2)
 ((and (= x 160)(= y 300)) c3)
 ((and (= x 160)(= y 250)) c4)
 ((and (= x 160)(= y 200)) c5)
 ((and (= x 160)(= y 150)) c6)
 ((and (= x 160)(= y 100)) c7)
 ((and (= x 160)(= y 50)) c8)
 ((and (= x 110)(= y 400)) b1)
 ((and (= x 110)(= y 350)) b2)
 ((and (= x 110)(= y 300)) b3)
 ((and (= x 110)(= y 250)) b4)
 ((and (= x 110)(= y 200)) b5)
 ((and (= x 110)(= y 150)) b6)
 ((and (= x 110)(= y 100)) b7)
 ((and (= x 110)(= y 50)) b8)
 ((and (= x 60)(= y 400)) a1)
 ((and (= x 60)(= y 350)) a2)
 ((and (= x 60)(= y 300)) a3)
 ((and (= x 60)(= y 250)) a4)
 ((and (= x 60)(= y 200)) a5)
 ((and (= x 60)(= y 150)) a6)
 ((and (= x 60)(= y 100)) a7)
 ((and (= x 60)(= y 50)) a8)
 (else (coordenada 0 0 0 (get-mouse-click ventana1)))
 )
)
;((draw-string ventana1)(make-posn 70 530) "LAS BLANCAS ESTAN EN JAQUE" "red")
;_____________________________________________________________________________________

(define (escribir p)
  (cond
    ((= p 1)((draw-string ventana1)(make-posn 70 530) "LAS BLANCAS ESTAN EN JAQUE"))
    ((= p 2)((draw-string ventana1)(make-posn 70 530) "LAS NEGRAS ESTAN EN JAQUE"))
    ((= p 3)((draw-solid-rectangle ventana1) (make-posn 65 510) 300 50 "white"))
    ((= p 4)((draw-string ventana1)(make-posn 70 530) "LAS BLANCAS QUEDAN EN JAQUE"))
    ((= p 5)((draw-string ventana1)(make-posn 70 530) "LAS NEGRAS QUEDAN EN JAQUE"))
   )
)
;***************************************************************************
; Tiene como entrada una coordenada y retorna la ficha que en esa posicion *__________________________________________________________________
;***************************************************************************
(define (permitir-blancas d c r s v i jb jn)
  (if (= jb 1)
      (begin
        (escribir 1)
        (coordenada 0 0 0 (get-mouse-click ventana1))
      )
      (if (= jn 1)
          (begin
            (escribir 2)
            (cond
              ((equal? (que_hay2? d) "peon.gif")(ejecutar d c r s v i))
              ((equal? (que_hay2? d) "torre.gif")(ejecutar2 d c r s v i))
              ((equal? (que_hay2? d) "caballo.gif")(ejecutar3 d c r s v i))
              ((equal? (que_hay2? d) "alfil.gif")(ejecutar4 d c r s v i))
              ((equal? (que_hay2? d) "reina.gif")(ejecutar5 d c r s v i))
              ((equal? (que_hay2? d) "rey.gif")(ejecutar6 d c r s v i))
             )
           )
       (cond
          ((equal? (que_hay2? d) "peon.gif")(ejecutar d c r s v i))
          ((equal? (que_hay2? d) "torre.gif")(ejecutar2 d c r s v i))
          ((equal? (que_hay2? d) "caballo.gif")(ejecutar3 d c r s v i))
          ((equal? (que_hay2? d) "alfil.gif")(ejecutar4 d c r s v i))
          ((equal? (que_hay2? d) "reina.gif")(ejecutar5 d c r s v i))
          ((equal? (que_hay2? d) "rey.gif")(ejecutar6 d c r s v i))
       )
   )
 )
)
(define (permitir-negras d c r s v i jb jn)
  (if (= jn 1)
      (begin
        (escribir 2)
        (coordenada3 0 0 0 (get-mouse-click ventana1))
      )
      (if (= jb 1)
          (begin
            (escribir 1)
            (cond
              ((equal? (que_hay2? d) "peon2.gif")(ejecutar7 d c r s v i))
              ((equal? (que_hay2? d) "torre2.gif")(ejecutar8 d c r s v i))
              ((equal? (que_hay2? d) "caballo2.gif")(ejecutar9 d c r s v i))
              ((equal? (que_hay2? d) "alfil2.gif")(ejecutar10 d c r s v i))
              ((equal? (que_hay2? d) "reina2.gif")(ejecutar11 d c r s v i))
              ((equal? (que_hay2? d) "rey2.gif")(ejecutar12 d c r s v i))
             )
           )
       (cond
          ((equal? (que_hay2? d) "peon2.gif")(ejecutar7 d c r s v i))
          ((equal? (que_hay2? d) "torre2.gif")(ejecutar8 d c r s v i))
          ((equal? (que_hay2? d) "caballo2.gif")(ejecutar9 d c r s v i))
          ((equal? (que_hay2? d) "alfil2.gif")(ejecutar10 d c r s v i))
          ((equal? (que_hay2? d) "reina2.gif")(ejecutar11 d c r s v i))
          ((equal? (que_hay2? d) "rey2.gif")(ejecutar12 d c r s v i))
       )
   )
 )
)

(define (jaque_peon e c)
        (cond
          ((equal? e 0) 0)
          ((and (= (posn-x c)(+ (posn-x e)50))(= (posn-y c)(- (posn-y e)50))) 1 )
          ((and (= (posn-x c)(- (posn-x e)50))(= (posn-y c)(- (posn-y e)50))) 1 )
          (else 0)
        )
)
(define (jaque_torre e c)
  (if (equal? e c )
      (cond
        ((equal? (que_hay2? c) "rey2.gif")1) 
        (else 0)
      )
      (cond
        ((equal? e 0) 0)
        ((and (= (posn-x e)(posn-x c))(< (posn-y e)(-(posn-y c)50))(equal? (que_hay2? (convertir (posn-x e)(+(posn-y e)50)))"vacio.gif"))(jaque_torre (convertir (posn-x e)(+(posn-y e)50)) c))
        ((and (= (posn-x e)(posn-x c))(= (posn-y e)(-(posn-y c)50)))(jaque_torre (convertir (posn-x e)(+(posn-y e)50)) c))
        ((and (= (posn-x e)(posn-x c))(> (posn-y e)(+(posn-y c)50))(equal? (que_hay2? (convertir (posn-x e)(-(posn-y e)50)))"vacio.gif"))(jaque_torre (convertir (posn-x e)(-(posn-y e)50)) c))
        ((and (= (posn-x e)(posn-x c))(= (posn-y e)(+(posn-y c)50)))(jaque_torre (convertir (posn-x e)(-(posn-y e)50)) c))
        ((and (> (posn-x e)(+(posn-x c)50))(= (posn-y e)(posn-y c))(equal? (que_hay2? (convertir (-(posn-x e)50)(posn-y e)))"vacio.gif"))(jaque_torre (convertir (-(posn-x e)50)(posn-y e)) c))
        ((and (= (posn-x e)(+(posn-x c)50))(= (posn-y e)(posn-y c)))(jaque_torre (convertir (-(posn-x e)50)(posn-y e)) c))
        ((and (< (posn-x e)(-(posn-x c)50))(= (posn-y e)(posn-y c))(equal? (que_hay2? (convertir (+(posn-x e)50)(posn-y e)))"vacio.gif"))(jaque_torre (convertir (+(posn-x e)50)(posn-y e)) c)) 
        ((and (= (posn-x e)(-(posn-x c)50))(= (posn-y e)(posn-y c)))(jaque_torre (convertir (+(posn-x e)50)(posn-y e)) c))
        (else 0)
      )
   )
 )

(define (jaque_caballo e c)
      (cond
      ((equal? e 0) 0)
      ((and (= (posn-x e)(-(posn-x c)50))(= (posn-y e)(-(posn-y c)100)))1)
      ((and (= (posn-x e)(+(posn-x c)50))(= (posn-y e)(-(posn-y c)100)))1)
      ((and (= (posn-x e)(-(posn-x c)50))(= (posn-y e)(+(posn-y c)100)))1)
      ((and (= (posn-x e)(+(posn-x c)50))(= (posn-y e)(+(posn-y c)100)))1)
      ((and (= (posn-x e)(-(posn-x c)100))(= (posn-y e)(-(posn-y c)50)))1)
      ((and (= (posn-x e)(+(posn-x c)100))(= (posn-y e)(-(posn-y c)50)))1)
      ((and (= (posn-x e)(-(posn-x c)100))(= (posn-y e)(+(posn-y c)50)))1)
      ((and (= (posn-x e)(+(posn-x c)100))(= (posn-y e)(+(posn-y c)50)))1)
      (else 0)
      )
)

(define (jaque_alfil e c)
  (if (equal? e c)
      (begin
        (cond
        ((equal? (que_hay2? c) "rey2.gif")1) 
        (else 0)
        )
      )
   (cond
     ((equal? e 0) 0)
     ((and (< (posn-x e)(-(posn-x c)50))(< (posn-y e)(-(posn-y c)50))(equal? (que_hay2? (convertir (+(posn-x e)50)(+(posn-y e)50)))"vacio.gif"))(jaque_alfil (convertir (+(posn-x e)50)(+(posn-y e)50)) c))
     ((and (= (posn-x e)(-(posn-x c)50))(= (posn-y e)(-(posn-y c)50)))(jaque_alfil (convertir (+(posn-x e)50)(+(posn-y e)50)) c))
     ((and (> (posn-x e)(+(posn-x c)50))(> (posn-y e)(+(posn-y c)50))(equal? (que_hay2? (convertir (-(posn-x e)50)(-(posn-y e)50)))"vacio.gif"))(jaque_alfil (convertir (-(posn-x e)50)(-(posn-y e)50)) c))
     ((and (= (posn-x e)(+(posn-x c)50))(= (posn-y e)(+(posn-y c)50)))(jaque_alfil (convertir (-(posn-x e)50)(-(posn-y e)50)) c))
     ((and (> (posn-x e)(+(posn-x c)50))(< (posn-y e)(-(posn-y c)50))(equal? (que_hay2? (convertir (-(posn-x e)50)(+(posn-y e)50)))"vacio.gif"))(jaque_alfil (convertir (-(posn-x e)50)(+(posn-y e)50)) c))
     ((and (= (posn-x e)(+(posn-x c)50))(= (posn-y e)(-(posn-y c)50)))(jaque_alfil (convertir (-(posn-x e)50)(+(posn-y e)50)) c))
     ((and (< (posn-x e)(-(posn-x c)50))(> (posn-y e)(+(posn-y c)50))(equal? (que_hay2? (convertir (+(posn-x e)50)(-(posn-y e)50)))"vacio.gif"))(jaque_alfil (convertir (+(posn-x e)50)(-(posn-y e)50)) c)) 
     ((and (= (posn-x e)(-(posn-x c)50))(= (posn-y e)(+(posn-y c)50)))(jaque_alfil (convertir (+(posn-x e)50)(-(posn-y e)50)) c))
     (else 0)
   )
 )
)
(define (jaque_reina e c)
   (if (equal? e c)
      (begin
        (cond
        ((equal? (que_hay2? c) "rey2.gif")1) 
        (else 0)
        )
      )
   (cond
     ((equal? e 0) 0)
     ((and (< (posn-x e)(-(posn-x c)50))(< (posn-y e)(-(posn-y c)50))(equal? (que_hay2? (convertir (+(posn-x e)50)(+(posn-y e)50)))"vacio.gif"))(jaque_reina (convertir (+(posn-x e)50)(+(posn-y e)50)) c))
     ((and (= (posn-x e)(-(posn-x c)50))(= (posn-y e)(-(posn-y c)50)))(jaque_reina (convertir (+(posn-x e)50)(+(posn-y e)50)) c))
     ((and (> (posn-x e)(+(posn-x c)50))(> (posn-y e)(+(posn-y c)50))(equal? (que_hay2? (convertir (-(posn-x e)50)(-(posn-y e)50)))"vacio.gif"))(jaque_reina (convertir (-(posn-x e)50)(-(posn-y e)50)) c))
     ((and (= (posn-x e)(+(posn-x c)50))(= (posn-y e)(+(posn-y c)50)))(jaque_reina (convertir (-(posn-x e)50)(-(posn-y e)50)) c))
     ((and (> (posn-x e)(+(posn-x c)50))(< (posn-y e)(-(posn-y c)50))(equal? (que_hay2? (convertir (-(posn-x e)50)(+(posn-y e)50)))"vacio.gif"))(jaque_reina (convertir (-(posn-x e)50)(+(posn-y e)50)) c))
     ((and (= (posn-x e)(+(posn-x c)50))(= (posn-y e)(-(posn-y c)50)))(jaque_reina (convertir (-(posn-x e)50)(+(posn-y e)50)) c))
     ((and (< (posn-x e)(-(posn-x c)50))(> (posn-y e)(+(posn-y c)50))(equal? (que_hay2? (convertir (+(posn-x e)50)(-(posn-y e)50)))"vacio.gif"))(jaque_reina (convertir (+(posn-x e)50)(-(posn-y e)50)) c)) 
     ((and (= (posn-x e)(-(posn-x c)50))(= (posn-y e)(+(posn-y c)50)))(jaque_reina (convertir (+(posn-x e)50)(-(posn-y e)50)) c))
     ((and (= (posn-x e)(posn-x c))(< (posn-y e)(-(posn-y c)50))(equal? (que_hay2? (convertir (posn-x e)(+(posn-y e)50)))"vacio.gif"))(jaque_reina (convertir (posn-x e)(+(posn-y e)50)) c))
     ((and (= (posn-x e)(posn-x c))(= (posn-y e)(-(posn-y c)50)))(jaque_reina (convertir (posn-x e)(+(posn-y e)50)) c))
     ((and (= (posn-x e)(posn-x c))(> (posn-y e)(+(posn-y c)50))(equal? (que_hay2? (convertir (posn-x e)(-(posn-y e)50)))"vacio.gif"))(jaque_reina (convertir (posn-x e)(-(posn-y e)50)) c))
     ((and (= (posn-x e)(posn-x c))(= (posn-y e)(+(posn-y c)50)))(jaque_reina (convertir (posn-x e)(-(posn-y e)50)) c))
     ((and (> (posn-x e)(+(posn-x c)50))(= (posn-y e)(posn-y c))(equal? (que_hay2? (convertir (-(posn-x e)50)(posn-y e)))"vacio.gif"))(jaque_reina (convertir (-(posn-x e)50)(posn-y e)) c))
     ((and (= (posn-x e)(+(posn-x c)50))(= (posn-y e)(posn-y c)))(jaque_reina (convertir (-(posn-x e)50)(posn-y e)) c))
     ((and (< (posn-x e)(-(posn-x c)50))(= (posn-y e)(posn-y c))(equal? (que_hay2? (convertir (+(posn-x e)50)(posn-y e)))"vacio.gif"))(jaque_reina (convertir (+(posn-x e)50)(posn-y e)) c)) 
     ((and (= (posn-x e)(-(posn-x c)50))(= (posn-y e)(posn-y c)))(jaque_reina (convertir (+(posn-x e)50)(posn-y e)) c))
     (else 0)
    )
   )
)
(define (jaque_rey e c)
 (cond
   ((equal? e 0) 0)
   ((and (= (posn-x e)(posn-x c))(= (posn-y e)(-(posn-y c)50)))1)
   ((and (= (posn-x e)(posn-x c))(= (posn-y e)(+(posn-y c)50)))1)
   ((and (= (posn-x e)(-(posn-x c)50))(= (posn-y e)(posn-y c)))1)
   ((and (= (posn-x e)(+(posn-x c)50))(= (posn-y e)(posn-y c)))1)
   ((and (= (posn-x e)(-(posn-x c)50))(= (posn-y e)(-(posn-y c)50)))1)
   ((and (= (posn-x e)(-(posn-x c)50))(= (posn-y e)(+(posn-y c)50)))1)
   ((and (= (posn-x e)(+(posn-x c)50))(= (posn-y e)(-(posn-y c)50)))1)
   ((and (= (posn-x e)(+(posn-x c)50))(= (posn-y e)(+(posn-y c)50)))1)
   (else 0)
 )
)
(define (jaque_peon2 e c)
        (cond
          ((equal? e 0) 0)
          ((and (= (posn-x c)(- (posn-x e)50))(= (posn-y c)(+ (posn-y e)50))) 1 )
          ((and (= (posn-x c)(+ (posn-x e)50))(= (posn-y c)(+ (posn-y e)50))) 1 )
          (else 0)
        )
)
(define (jaque_torre2 e c)
  (if (equal? e c )
      (cond
        ((equal? (que_hay2? c) "rey.gif")1) 
        (else 0)
      )
      (cond
        ((equal? e 0) 0)
        ((and (= (posn-x e)(posn-x c))(< (posn-y e)(-(posn-y c)50))(equal? (que_hay2? (convertir (posn-x e)(+(posn-y e)50)))"vacio.gif"))(jaque_torre2 (convertir (posn-x e)(+(posn-y e)50)) c))
        ((and (= (posn-x e)(posn-x c))(= (posn-y e)(-(posn-y c)50)))(jaque_torre2 (convertir (posn-x e)(+(posn-y e)50)) c))
        ((and (= (posn-x e)(posn-x c))(> (posn-y e)(+(posn-y c)50))(equal? (que_hay2? (convertir (posn-x e)(-(posn-y e)50)))"vacio.gif"))(jaque_torre2 (convertir (posn-x e)(-(posn-y e)50)) c))
        ((and (= (posn-x e)(posn-x c))(= (posn-y e)(+(posn-y c)50)))(jaque_torre2 (convertir (posn-x e)(-(posn-y e)50)) c))
        ((and (> (posn-x e)(+(posn-x c)50))(= (posn-y e)(posn-y c))(equal? (que_hay2? (convertir (-(posn-x e)50)(posn-y e)))"vacio.gif"))(jaque_torre2 (convertir (-(posn-x e)50)(posn-y e)) c))
        ((and (= (posn-x e)(+(posn-x c)50))(= (posn-y e)(posn-y c)))(jaque_torre2 (convertir (-(posn-x e)50)(posn-y e)) c))
        ((and (< (posn-x e)(-(posn-x c)50))(= (posn-y e)(posn-y c))(equal? (que_hay2? (convertir (+(posn-x e)50)(posn-y e)))"vacio.gif"))(jaque_torre2 (convertir (+(posn-x e)50)(posn-y e)) c)) 
        ((and (= (posn-x e)(-(posn-x c)50))(= (posn-y e)(posn-y c)))(jaque_torre2 (convertir (+(posn-x e)50)(posn-y e)) c))
        (else 0)
      )
   )
 )
(define (jaque_caballo2 e c)
      (cond
      ((equal? e 0) 0)
      ((and (= (posn-x e)(-(posn-x c)50))(= (posn-y e)(-(posn-y c)100)))1)
      ((and (= (posn-x e)(+(posn-x c)50))(= (posn-y e)(-(posn-y c)100)))1)
      ((and (= (posn-x e)(-(posn-x c)50))(= (posn-y e)(+(posn-y c)100)))1)
      ((and (= (posn-x e)(+(posn-x c)50))(= (posn-y e)(+(posn-y c)100)))1)
      ((and (= (posn-x e)(-(posn-x c)100))(= (posn-y e)(-(posn-y c)50)))1)
      ((and (= (posn-x e)(+(posn-x c)100))(= (posn-y e)(-(posn-y c)50)))1)
      ((and (= (posn-x e)(-(posn-x c)100))(= (posn-y e)(+(posn-y c)50)))1)
      ((and (= (posn-x e)(+(posn-x c)100))(= (posn-y e)(+(posn-y c)50)))1)
      (else 0)
      )
)

(define (jaque_alfil2 e c)
  (if (equal? e c)
      (begin
        (cond
        ((equal? (que_hay2? c) "rey.gif")1) 
        (else 0)
        )
      )
   (cond
     ((equal? e 0) 0)
     ((and (< (posn-x e)(-(posn-x c)50))(< (posn-y e)(-(posn-y c)50))(equal? (que_hay2? (convertir (+(posn-x e)50)(+(posn-y e)50)))"vacio.gif"))(jaque_alfil2 (convertir (+(posn-x e)50)(+(posn-y e)50)) c))
     ((and (= (posn-x e)(-(posn-x c)50))(= (posn-y e)(-(posn-y c)50)))(jaque_alfil2 (convertir (+(posn-x e)50)(+(posn-y e)50)) c))
     ((and (> (posn-x e)(+(posn-x c)50))(> (posn-y e)(+(posn-y c)50))(equal? (que_hay2? (convertir (-(posn-x e)50)(-(posn-y e)50)))"vacio.gif"))(jaque_alfil2 (convertir (-(posn-x e)50)(-(posn-y e)50)) c))
     ((and (= (posn-x e)(+(posn-x c)50))(= (posn-y e)(+(posn-y c)50)))(jaque_alfil2 (convertir (-(posn-x e)50)(-(posn-y e)50)) c))
     ((and (> (posn-x e)(+(posn-x c)50))(< (posn-y e)(-(posn-y c)50))(equal? (que_hay2? (convertir (-(posn-x e)50)(+(posn-y e)50)))"vacio.gif"))(jaque_alfil2 (convertir (-(posn-x e)50)(+(posn-y e)50)) c))
     ((and (= (posn-x e)(+(posn-x c)50))(= (posn-y e)(-(posn-y c)50)))(jaque_alfil2 (convertir (-(posn-x e)50)(+(posn-y e)50)) c))
     ((and (< (posn-x e)(-(posn-x c)50))(> (posn-y e)(+(posn-y c)50))(equal? (que_hay2? (convertir (+(posn-x e)50)(-(posn-y e)50)))"vacio.gif"))(jaque_alfil2 (convertir (+(posn-x e)50)(-(posn-y e)50)) c)) 
     ((and (= (posn-x e)(-(posn-x c)50))(= (posn-y e)(+(posn-y c)50)))(jaque_alfil2 (convertir (+(posn-x e)50)(-(posn-y e)50)) c))
     (else 0)
   )
 )
)
(define (jaque_reina2 e c)
   (if (equal? e c)
      (begin
        (cond
        ((equal? (que_hay2? c) "rey.gif")1) 
        (else 0)
        )
      )
   (cond
     ((equal? e 0) 0)
     ((and (< (posn-x e)(-(posn-x c)50))(< (posn-y e)(-(posn-y c)50))(equal? (que_hay2? (convertir (+(posn-x e)50)(+(posn-y e)50)))"vacio.gif"))(jaque_reina2 (convertir (+(posn-x e)50)(+(posn-y e)50)) c))
     ((and (= (posn-x e)(-(posn-x c)50))(= (posn-y e)(-(posn-y c)50)))(jaque_reina2 (convertir (+(posn-x e)50)(+(posn-y e)50)) c))
     ((and (> (posn-x e)(+(posn-x c)50))(> (posn-y e)(+(posn-y c)50))(equal? (que_hay2? (convertir (-(posn-x e)50)(-(posn-y e)50)))"vacio.gif"))(jaque_reina2 (convertir (-(posn-x e)50)(-(posn-y e)50)) c))
     ((and (= (posn-x e)(+(posn-x c)50))(= (posn-y e)(+(posn-y c)50)))(jaque_reina2 (convertir (-(posn-x e)50)(-(posn-y e)50)) c))
     ((and (> (posn-x e)(+(posn-x c)50))(< (posn-y e)(-(posn-y c)50))(equal? (que_hay2? (convertir (-(posn-x e)50)(+(posn-y e)50)))"vacio.gif"))(jaque_reina2 (convertir (-(posn-x e)50)(+(posn-y e)50)) c))
     ((and (= (posn-x e)(+(posn-x c)50))(= (posn-y e)(-(posn-y c)50)))(jaque_reina2 (convertir (-(posn-x e)50)(+(posn-y e)50)) c))
     ((and (< (posn-x e)(-(posn-x c)50))(> (posn-y e)(+(posn-y c)50))(equal? (que_hay2? (convertir (+(posn-x e)50)(-(posn-y e)50)))"vacio.gif"))(jaque_reina2 (convertir (+(posn-x e)50)(-(posn-y e)50)) c)) 
     ((and (= (posn-x e)(-(posn-x c)50))(= (posn-y e)(+(posn-y c)50)))(jaque_reina2 (convertir (+(posn-x e)50)(-(posn-y e)50)) c))
     ((and (= (posn-x e)(posn-x c))(< (posn-y e)(-(posn-y c)50))(equal? (que_hay2? (convertir (posn-x e)(+(posn-y e)50)))"vacio.gif"))(jaque_reina2 (convertir (posn-x e)(+(posn-y e)50)) c))
     ((and (= (posn-x e)(posn-x c))(= (posn-y e)(-(posn-y c)50)))(jaque_reina2 (convertir (posn-x e)(+(posn-y e)50)) c))
     ((and (= (posn-x e)(posn-x c))(> (posn-y e)(+(posn-y c)50))(equal? (que_hay2? (convertir (posn-x e)(-(posn-y e)50)))"vacio.gif"))(jaque_reina2 (convertir (posn-x e)(-(posn-y e)50)) c))
     ((and (= (posn-x e)(posn-x c))(= (posn-y e)(+(posn-y c)50)))(jaque_reina2 (convertir (posn-x e)(-(posn-y e)50)) c))
     ((and (> (posn-x e)(+(posn-x c)50))(= (posn-y e)(posn-y c))(equal? (que_hay2? (convertir (-(posn-x e)50)(posn-y e)))"vacio.gif"))(jaque_reina2 (convertir (-(posn-x e)50)(posn-y e)) c))
     ((and (= (posn-x e)(+(posn-x c)50))(= (posn-y e)(posn-y c)))(jaque_reina2 (convertir (-(posn-x e)50)(posn-y e)) c))
     ((and (< (posn-x e)(-(posn-x c)50))(= (posn-y e)(posn-y c))(equal? (que_hay2? (convertir (+(posn-x e)50)(posn-y e)))"vacio.gif"))(jaque_reina2 (convertir (+(posn-x e)50)(posn-y e)) c)) 
     ((and (= (posn-x e)(-(posn-x c)50))(= (posn-y e)(posn-y c)))(jaque_reina2 (convertir (+(posn-x e)50)(posn-y e)) c))
     (else 0)
    )
   )
)
(define (jaque_rey2 e c)
 (cond
   ((equal? e 0) 0)
   ((and (= (posn-x e)(posn-x c))(= (posn-y e)(-(posn-y c)50)))1)
   ((and (= (posn-x e)(posn-x c))(= (posn-y e)(+(posn-y c)50)))1)
   ((and (= (posn-x e)(-(posn-x c)50))(= (posn-y e)(posn-y c)))1)
   ((and (= (posn-x e)(+(posn-x c)50))(= (posn-y e)(posn-y c)))1)
   ((and (= (posn-x e)(-(posn-x c)50))(= (posn-y e)(-(posn-y c)50)))1)
   ((and (= (posn-x e)(-(posn-x c)50))(= (posn-y e)(+(posn-y c)50)))1)
   ((and (= (posn-x e)(+(posn-x c)50))(= (posn-y e)(-(posn-y c)50)))1)
   ((and (= (posn-x e)(+(posn-x c)50))(= (posn-y e)(+(posn-y c)50)))1)
   (else 0)
 )
)

 
;*****************************************************************
; Establece que hay en una posicion dada por la funcion que hace *_______________________________________________________________ 
; su llamado recursivo                                           *
;*****************************************************************

(define (que_hay2? x)
  (cond
    ((equal? x a1)(vector-ref (vector-ref vectors 0)0))
    ((equal? x a2)(vector-ref (vector-ref vectors 1)0))
    ((equal? x a3)(vector-ref (vector-ref vectors 2)0))
    ((equal? x a4)(vector-ref (vector-ref vectors 3)0))
    ((equal? x a5)(vector-ref (vector-ref vectors 4)0))
    ((equal? x a6)(vector-ref (vector-ref vectors 5)0))
    ((equal? x a7)(vector-ref (vector-ref vectors 6)0))
    ((equal? x a8)(vector-ref (vector-ref vectors 7)0))
    ((equal? x b1)(vector-ref (vector-ref vectors 0)1))
    ((equal? x b2)(vector-ref (vector-ref vectors 1)1))
    ((equal? x b3)(vector-ref (vector-ref vectors 2)1))
    ((equal? x b4)(vector-ref (vector-ref vectors 3)1))
    ((equal? x b5)(vector-ref (vector-ref vectors 4)1))
    ((equal? x b6)(vector-ref (vector-ref vectors 5)1))
    ((equal? x b7)(vector-ref (vector-ref vectors 6)1))
    ((equal? x b8)(vector-ref (vector-ref vectors 7)1))
    ((equal? x c1)(vector-ref (vector-ref vectors 0)2))
    ((equal? x c2)(vector-ref (vector-ref vectors 1)2))
    ((equal? x c3)(vector-ref (vector-ref vectors 2)2))
    ((equal? x c4)(vector-ref (vector-ref vectors 3)2))
    ((equal? x c5)(vector-ref (vector-ref vectors 4)2))
    ((equal? x c6)(vector-ref (vector-ref vectors 5)2))
    ((equal? x c7)(vector-ref (vector-ref vectors 6)2))
    ((equal? x c8)(vector-ref (vector-ref vectors 7)2))
    ((equal? x d1)(vector-ref (vector-ref vectors 0)3))
    ((equal? x d2)(vector-ref (vector-ref vectors 1)3))
    ((equal? x d3)(vector-ref (vector-ref vectors 2)3))
    ((equal? x d4)(vector-ref (vector-ref vectors 3)3))
    ((equal? x d5)(vector-ref (vector-ref vectors 4)3))
    ((equal? x d6)(vector-ref (vector-ref vectors 5)3))
    ((equal? x d7)(vector-ref (vector-ref vectors 6)3))
    ((equal? x d8)(vector-ref (vector-ref vectors 7)3))
    ((equal? x e1)(vector-ref (vector-ref vectors 0)4))
    ((equal? x e2)(vector-ref (vector-ref vectors 1)4))
    ((equal? x e3)(vector-ref (vector-ref vectors 2)4))
    ((equal? x e4)(vector-ref (vector-ref vectors 3)4))
    ((equal? x e5)(vector-ref (vector-ref vectors 4)4))
    ((equal? x e6)(vector-ref (vector-ref vectors 5)4))
    ((equal? x e7)(vector-ref (vector-ref vectors 6)4))
    ((equal? x e8)(vector-ref (vector-ref vectors 7)4))
    ((equal? x f1)(vector-ref (vector-ref vectors 0)5))
    ((equal? x f2)(vector-ref (vector-ref vectors 1)5))
    ((equal? x f3)(vector-ref (vector-ref vectors 2)5))
    ((equal? x f4)(vector-ref (vector-ref vectors 3)5))
    ((equal? x f5)(vector-ref (vector-ref vectors 4)5))
    ((equal? x f6)(vector-ref (vector-ref vectors 5)5))
    ((equal? x f7)(vector-ref (vector-ref vectors 6)5))
    ((equal? x f8)(vector-ref (vector-ref vectors 7)5))
    ((equal? x g1)(vector-ref (vector-ref vectors 0)6))
    ((equal? x g2)(vector-ref (vector-ref vectors 1)6))
    ((equal? x g3)(vector-ref (vector-ref vectors 2)6)) 
    ((equal? x g4)(vector-ref (vector-ref vectors 3)6))
    ((equal? x g5)(vector-ref (vector-ref vectors 4)6))
    ((equal? x g6)(vector-ref (vector-ref vectors 5)6))
    ((equal? x g7)(vector-ref (vector-ref vectors 6)6))
    ((equal? x g8)(vector-ref (vector-ref vectors 7)6))
    ((equal? x h1)(vector-ref (vector-ref vectors 0)7))
    ((equal? x h2)(vector-ref (vector-ref vectors 1)7))
    ((equal? x h3)(vector-ref (vector-ref vectors 2)7))
    ((equal? x h4)(vector-ref (vector-ref vectors 3)7))
    ((equal? x h5)(vector-ref (vector-ref vectors 4)7))
    ((equal? x h6)(vector-ref (vector-ref vectors 5)7))
    ((equal? x h7)(vector-ref (vector-ref vectors 6)7))
    ((equal? x h8)(vector-ref (vector-ref vectors 7)7))
    (else "fin")
   )
)
;******************************************************************

(define (numero x)
  (cond
    ((equal? x a8) 0)
    ((equal? x a7) 1)
    ((equal? x a6) 2)
    ((equal? x a5) 3)
    ((equal? x a4) 4)
    ((equal? x a3) 5)
    ((equal? x a2) 6)
    ((equal? x a1) 7)
    ((equal? x b8) 8)
    ((equal? x b7) 9)
    ((equal? x b6) 10)
    ((equal? x b5) 11)
    ((equal? x b4) 12)
    ((equal? x b3) 13)
    ((equal? x b2) 14)
    ((equal? x b1) 15)
    ((equal? x c8) 16)
    ((equal? x c7) 17)
    ((equal? x c6) 18)
    ((equal? x c5) 19)
    ((equal? x c4) 20)
    ((equal? x c3) 21)
    ((equal? x c2) 22)
    ((equal? x c1) 23)
    ((equal? x d8) 24)
    ((equal? x d7) 25)
    ((equal? x d6) 26)
    ((equal? x d5) 27)
    ((equal? x d4) 28)
    ((equal? x d3) 29)
    ((equal? x d2) 30)
    ((equal? x d1) 31)
    ((equal? x e8) 32)
    ((equal? x e7) 33)
    ((equal? x e6) 34)
    ((equal? x e5) 35)
    ((equal? x e4) 36)
    ((equal? x e3) 37)
    ((equal? x e2) 38)
    ((equal? x e1) 39)
    ((equal? x f8) 40)
    ((equal? x f7) 41)
    ((equal? x f6) 42)
    ((equal? x f5) 43)
    ((equal? x f4) 44)
    ((equal? x f3) 45)
    ((equal? x f2) 46)
    ((equal? x f1) 47)
    ((equal? x g8) 48)
    ((equal? x g7) 49)
    ((equal? x g6) 50)
    ((equal? x g5) 51)
    ((equal? x g4) 52)
    ((equal? x g3) 53)
    ((equal? x g2) 54)
    ((equal? x g1) 55)
    ((equal? x h8) 56)
    ((equal? x h7) 57)
    ((equal? x h6) 58)
    ((equal? x h5) 59)
    ((equal? x h4) 60)
    ((equal? x h3) 61)
    ((equal? x h2) 62)
    ((equal? x h1) 63)
    (else 0)
  )
)
;___________________________________________________________________________________________________________________________________________________________

(define (jaque_negras r s v i)
   (begin
    (vector-set! (vector-ref vectors v) i "peon2.gif")
    (vector-set! (vector-ref vectors r) s "vacio.gif")
       (cond
         ((=(jaque_peon (buscar_peon 0)(buscar_rey2 0))1) 1)
         ((=(jaque_torre (buscar_torre 0) (buscar_rey2 0))1) 1)
         ((=(jaque_torre (buscar_torre (+ (numero (buscar_torre 0))1)) (buscar_rey2 0))1) 1)
         ((=(jaque_caballo (buscar_caballo 0) (buscar_rey2 0))1) 1)
         ((=(jaque_caballo (buscar_caballo (+ (numero (buscar_caballo 0))1)) (buscar_rey2 0))1) 1)
         ((=(jaque_alfil (buscar_alfil 0) (buscar_rey2 0))1) 1)
         ((=(jaque_alfil (buscar_alfil (+ (numero (buscar_alfil 0))1)) (buscar_rey2 0))1) 1)
         ((=(jaque_reina (buscar_reina 0)(buscar_rey2 0))1) 1)
         ((=(jaque_reina (buscar_reina (+ (numero (buscar_reina 0))1))(buscar_rey2 0))1) 1)
         ((=(jaque_rey (buscar_rey 0)(buscar_rey2 0))1) 1)
         (else 0)
       )
    )
)
(define (jaque_negras2 r s v i)
   (begin
    (vector-set! (vector-ref vectors v) i "torre2.gif")
    (vector-set! (vector-ref vectors r) s "vacio.gif")
       (cond
         ((=(jaque_peon (buscar_peon 0)(buscar_rey2 0))1) 1)
         ((=(jaque_torre (buscar_torre 0) (buscar_rey2 0))1) 1)
         ((=(jaque_torre (buscar_torre (+ (numero (buscar_torre 0))1)) (buscar_rey2 0))1) 1)
         ((=(jaque_caballo (buscar_caballo 0) (buscar_rey2 0))1) 1)
         ((=(jaque_caballo (buscar_caballo (+ (numero (buscar_caballo 0))1)) (buscar_rey2 0))1) 1)
         ((=(jaque_alfil (buscar_alfil 0) (buscar_rey2 0))1) 1)
         ((=(jaque_alfil (buscar_alfil (+ (numero (buscar_alfil 0))1)) (buscar_rey2 0))1) 1)
         ((=(jaque_reina (buscar_reina 0)(buscar_rey2 0))1) 1)
         ((=(jaque_reina (buscar_reina (+ (numero (buscar_reina 0))1))(buscar_rey2 0))1) 1)
         ((=(jaque_rey (buscar_rey 0)(buscar_rey2 0))1) 1)
         (else 0)
       )
    )
)
(define (jaque_negras3 r s v i)
   (begin
    (vector-set! (vector-ref vectors v) i "caballo2.gif")
    (vector-set! (vector-ref vectors r) s "vacio.gif")
       (cond
         ((=(jaque_peon (buscar_peon 0)(buscar_rey2 0))1) 1)
         ((=(jaque_torre (buscar_torre 0) (buscar_rey2 0))1) 1)
         ((=(jaque_torre (buscar_torre (+ (numero (buscar_torre 0))1)) (buscar_rey2 0))1) 1)
         ((=(jaque_caballo (buscar_caballo 0) (buscar_rey2 0))1) 1)
         ((=(jaque_caballo (buscar_caballo (+ (numero (buscar_caballo 0))1)) (buscar_rey2 0))1) 1)
         ((=(jaque_alfil (buscar_alfil 0) (buscar_rey2 0))1) 1)
         ((=(jaque_alfil (buscar_alfil (+ (numero (buscar_alfil 0))1)) (buscar_rey2 0))1) 1)
         ((=(jaque_reina (buscar_reina 0)(buscar_rey2 0))1) 1)
         ((=(jaque_reina (buscar_reina (+ (numero (buscar_reina 0))1))(buscar_rey2 0))1) 1)
         ((=(jaque_rey (buscar_rey 0)(buscar_rey2 0))1) 1)
         (else 0)
       )
    )
)
(define (jaque_negras4 r s v i)
   (begin
    (vector-set! (vector-ref vectors v) i "alfil2.gif")
    (vector-set! (vector-ref vectors r) s "vacio.gif")
       (cond
         ((=(jaque_peon (buscar_peon 0)(buscar_rey2 0))1) 1)
         ((=(jaque_torre (buscar_torre 0) (buscar_rey2 0))1) 1)
         ((=(jaque_torre (buscar_torre (+ (numero (buscar_torre 0))1)) (buscar_rey2 0))1) 1)
         ((=(jaque_caballo (buscar_caballo 0) (buscar_rey2 0))1) 1)
         ((=(jaque_caballo (buscar_caballo (+ (numero (buscar_caballo 0))1)) (buscar_rey2 0))1) 1)
         ((=(jaque_alfil (buscar_alfil 0) (buscar_rey2 0))1) 1)
         ((=(jaque_alfil (buscar_alfil (+ (numero (buscar_alfil 0))1)) (buscar_rey2 0))1) 1)
         ((=(jaque_reina (buscar_reina 0)(buscar_rey2 0))1) 1)
         ((=(jaque_reina (buscar_reina (+ (numero (buscar_reina 0))1))(buscar_rey2 0))1) 1)
         ((=(jaque_rey (buscar_rey 0)(buscar_rey2 0))1) 1)
         (else 0)
       )
    )
)
(define (jaque_negras5 r s v i)
   (begin
    (vector-set! (vector-ref vectors v) i "reina2.gif")
    (vector-set! (vector-ref vectors r) s "vacio.gif")
       (cond
         ((=(jaque_peon (buscar_peon 0)(buscar_rey2 0))1) 1)
         ((=(jaque_torre (buscar_torre 0) (buscar_rey2 0))1) 1)
         ((=(jaque_torre (buscar_torre (+ (numero (buscar_torre 0))1)) (buscar_rey2 0))1) 1)
         ((=(jaque_caballo (buscar_caballo 0) (buscar_rey2 0))1) 1)
         ((=(jaque_caballo (buscar_caballo (+ (numero (buscar_caballo 0))1)) (buscar_rey2 0))1) 1)
         ((=(jaque_alfil (buscar_alfil 0) (buscar_rey2 0))1) 1)
         ((=(jaque_alfil (buscar_alfil (+ (numero (buscar_alfil 0))1)) (buscar_rey2 0))1) 1)
         ((=(jaque_reina (buscar_reina 0)(buscar_rey2 0))1) 1)
         ((=(jaque_rey (buscar_rey 0)(buscar_rey2 0))1) 1)
         (else 0)
       )
    )
)
(define (jaque_negras6 r s v i)
   (begin
    (vector-set! (vector-ref vectors v) i "rey2.gif")
    (vector-set! (vector-ref vectors r) s "vacio.gif")
       (cond
         ((=(jaque_peon (buscar_peon 0)(buscar_rey2 0))1) 1)
         ((=(jaque_torre (buscar_torre 0) (buscar_rey2 0))1) 1)
         ((=(jaque_torre (buscar_torre (+ (numero (buscar_torre 0))1)) (buscar_rey2 0))1) 1)
         ((=(jaque_caballo (buscar_caballo 0) (buscar_rey2 0))1) 1)
         ((=(jaque_caballo (buscar_caballo (+ (numero (buscar_caballo 0))1)) (buscar_rey2 0))1) 1)
         ((=(jaque_alfil (buscar_alfil 0) (buscar_rey2 0))1) 1)
         ((=(jaque_alfil (buscar_alfil (+ (numero (buscar_alfil 0))1)) (buscar_rey2 0))1) 1)
         ((=(jaque_reina (buscar_reina 0)(buscar_rey2 0))1) 1)
         ((=(jaque_rey (buscar_rey 0)(buscar_rey2 0))1) 1)
         (else 0)
       )
    )
)
(define (jaque_negras7 r s v i)
   (begin
    (vector-set! (vector-ref vectors v) i "peon.gif")
    (vector-set! (vector-ref vectors r) s "vacio.gif")
       (cond
         ((=(jaque_peon (buscar_peon 0)(buscar_rey2 0))1) 1)
         ((=(jaque_torre (buscar_torre 0) (buscar_rey2 0))1) 1)
         ((=(jaque_torre (buscar_torre (+ (numero (buscar_torre 0))1)) (buscar_rey2 0))1) 1)
         ((=(jaque_caballo (buscar_caballo 0) (buscar_rey2 0))1) 1)
         ((=(jaque_caballo (buscar_caballo (+ (numero (buscar_caballo 0))1)) (buscar_rey2 0))1) 1)
         ((=(jaque_alfil (buscar_alfil 0) (buscar_rey2 0))1) 1)
         ((=(jaque_alfil (buscar_alfil (+ (numero (buscar_alfil 0))1)) (buscar_rey2 0))1) 1)
         ((=(jaque_reina (buscar_reina 0)(buscar_rey2 0))1) 1)
         ((=(jaque_rey (buscar_rey 0)(buscar_rey2 0))1) 1)
         (else 0)
       )
    )
)
(define (jaque_negras8 r s v i)
   (begin
    (vector-set! (vector-ref vectors v) i "torre.gif")
    (vector-set! (vector-ref vectors r) s "vacio.gif")
       (cond
         ((=(jaque_peon (buscar_peon 0)(buscar_rey2 0))1) 1)
         ((=(jaque_torre (buscar_torre 0) (buscar_rey2 0))1) 1)
         ((=(jaque_torre (buscar_torre (+ (numero (buscar_torre 0))1)) (buscar_rey2 0))1) 1)
         ((=(jaque_caballo (buscar_caballo 0) (buscar_rey2 0))1) 1)
         ((=(jaque_caballo (buscar_caballo (+ (numero (buscar_caballo 0))1)) (buscar_rey2 0))1) 1)
         ((=(jaque_alfil (buscar_alfil 0) (buscar_rey2 0))1) 1)
         ((=(jaque_alfil (buscar_alfil (+ (numero (buscar_alfil 0))1)) (buscar_rey2 0))1) 1)
         ((=(jaque_reina (buscar_reina 0)(buscar_rey2 0))1) 1)
         ((=(jaque_reina (buscar_reina (+ (numero (buscar_reina 0))1))(buscar_rey2 0))1) 1)
         ((=(jaque_rey (buscar_rey 0)(buscar_rey2 0))1) 1)
         (else 0)
       )
    )
)
(define (jaque_negras9 r s v i)
   (begin
    (vector-set! (vector-ref vectors v) i "caballo.gif")
    (vector-set! (vector-ref vectors r) s "vacio.gif")
       (cond
         ((=(jaque_peon (buscar_peon 0)(buscar_rey2 0))1) 1)
         ((=(jaque_torre (buscar_torre 0) (buscar_rey2 0))1) 1)
         ((=(jaque_torre (buscar_torre (+ (numero (buscar_torre 0))1)) (buscar_rey2 0))1) 1)
         ((=(jaque_caballo (buscar_caballo 0) (buscar_rey2 0))1) 1)
         ((=(jaque_caballo (buscar_caballo (+ (numero (buscar_caballo 0))1)) (buscar_rey2 0))1) 1)
         ((=(jaque_alfil (buscar_alfil 0) (buscar_rey2 0))1) 1)
         ((=(jaque_alfil (buscar_alfil (+ (numero (buscar_alfil 0))1)) (buscar_rey2 0))1) 1)
         ((=(jaque_reina (buscar_reina 0)(buscar_rey2 0))1) 1)
         ((=(jaque_reina (buscar_reina (+ (numero (buscar_reina 0))1))(buscar_rey2 0))1) 1)
         ((=(jaque_rey (buscar_rey 0)(buscar_rey2 0))1) 1)
         (else 0)
       )
    )
)
(define (jaque_negras10 r s v i)
   (begin
    (vector-set! (vector-ref vectors v) i "alfil.gif")
    (vector-set! (vector-ref vectors r) s "vacio.gif")
       (cond
         ((=(jaque_peon (buscar_peon 0)(buscar_rey2 0))1) 1)
         ((=(jaque_torre (buscar_torre 0) (buscar_rey2 0))1) 1)
         ((=(jaque_torre (buscar_torre (+ (numero (buscar_torre 0))1)) (buscar_rey2 0))1) 1)
         ((=(jaque_caballo (buscar_caballo 0) (buscar_rey2 0))1) 1)
         ((=(jaque_caballo (buscar_caballo (+ (numero (buscar_caballo 0))1)) (buscar_rey2 0))1) 1)
         ((=(jaque_alfil (buscar_alfil 0) (buscar_rey2 0))1) 1)
         ((=(jaque_alfil (buscar_alfil (+ (numero (buscar_alfil 0))1)) (buscar_rey2 0))1) 1)
         ((=(jaque_reina (buscar_reina 0)(buscar_rey2 0))1) 1)
         ((=(jaque_reina (buscar_reina (+ (numero (buscar_reina 0))1))(buscar_rey2 0))1) 1)
         ((=(jaque_rey (buscar_rey 0)(buscar_rey2 0))1) 1)
         (else 0)
       )
    )
)
(define (jaque_negras11 r s v i)
   (begin
    (vector-set! (vector-ref vectors v) i "reina.gif")
    (vector-set! (vector-ref vectors r) s "vacio.gif")
       (cond
         ((=(jaque_peon (buscar_peon 0)(buscar_rey2 0))1) 1)
         ((=(jaque_torre (buscar_torre 0) (buscar_rey2 0))1) 1)
         ((=(jaque_torre (buscar_torre (+ (numero (buscar_torre 0))1)) (buscar_rey2 0))1) 1)
         ((=(jaque_caballo (buscar_caballo 0) (buscar_rey2 0))1) 1)
         ((=(jaque_caballo (buscar_caballo (+ (numero (buscar_caballo 0))1)) (buscar_rey2 0))1) 1)
         ((=(jaque_alfil (buscar_alfil 0) (buscar_rey2 0))1) 1)
         ((=(jaque_alfil (buscar_alfil (+ (numero (buscar_alfil 0))1)) (buscar_rey2 0))1) 1)
         ((=(jaque_reina (buscar_reina 0)(buscar_rey2 0))1) 1)
         ((=(jaque_reina (buscar_reina (+ (numero (buscar_reina 0))1))(buscar_rey2 0))1) 1)
         ((=(jaque_rey (buscar_rey 0)(buscar_rey2 0))1) 1)
         (else 0)
       )
    )
)
(define (jaque_negras12 r s v i)
   (begin
    (vector-set! (vector-ref vectors v) i "rey.gif")
    (vector-set! (vector-ref vectors r) s "vacio.gif")
       (cond
         ((=(jaque_peon (buscar_peon 0)(buscar_rey2 0))1) 1)
         ((=(jaque_torre (buscar_torre 0) (buscar_rey2 0))1) 1)
         ((=(jaque_torre (buscar_torre (+ (numero (buscar_torre 0))1)) (buscar_rey2 0))1) 1)
         ((=(jaque_caballo (buscar_caballo 0) (buscar_rey2 0))1) 1)
         ((=(jaque_caballo (buscar_caballo (+ (numero (buscar_caballo 0))1)) (buscar_rey2 0))1) 1)
         ((=(jaque_alfil (buscar_alfil 0) (buscar_rey2 0))1) 1)
         ((=(jaque_alfil (buscar_alfil (+ (numero (buscar_alfil 0))1)) (buscar_rey2 0))1) 1)
         ((=(jaque_reina (buscar_reina 0)(buscar_rey2 0))1) 1)
         ((=(jaque_reina (buscar_reina (+ (numero (buscar_reina 0))1))(buscar_rey2 0))1) 1)
         ((=(jaque_rey (buscar_rey 0)(buscar_rey2 0))1) 1)
         (else 0)
       )
    )
)
(define (jaque_blancas r s v i)
       (begin
         (vector-set! (vector-ref vectors v) i "peon.gif")
         (vector-set! (vector-ref vectors r) s "vacio.gif")
         (cond
           ((=(jaque_peon2 (buscar_peon2 0)(buscar_rey 0))1) 1)
           ((=(jaque_torre2 (buscar_torre2 0) (buscar_rey 0))1) 1)
           ((=(jaque_torre2 (buscar_torre2 (+ (numero (buscar_torre2 0))1)) (buscar_rey 0))1) 1)
           ((=(jaque_caballo2 (buscar_caballo2 0) (buscar_rey 0))1) 1)
           ((=(jaque_caballo2 (buscar_caballo2 (+ (numero (buscar_caballo2 0))1)) (buscar_rey 0))1) 1)
           ((=(jaque_alfil2 (buscar_alfil2 0) (buscar_rey 0))1) 1)
           ((=(jaque_alfil2 (buscar_alfil2 (+ (numero (buscar_alfil2 0))1)) (buscar_rey 0))1) 1)
           ((=(jaque_reina2 (buscar_reina2 0)(buscar_rey 0))1) 1)
           ((=(jaque_reina2 (buscar_reina2 (+ (numero (buscar_reina2 0))1))(buscar_rey 0))1) 1)
           ((=(jaque_rey2 (buscar_rey2 0)(buscar_rey 0))1) 1)
           (else 0)
         )
       )
)
(define   (jaque_blancas2 r s v i)
   (begin
     (vector-set! (vector-ref vectors v) i "torre.gif")
     (vector-set! (vector-ref vectors r) s "vacio.gif")
   (cond
    ((=(jaque_peon2 (buscar_peon2 0)(buscar_rey 0))1) 1)
    ((=(jaque_torre2 (buscar_torre2 0) (buscar_rey 0))1) 1)
    ((=(jaque_torre2 (buscar_torre2 (+ (numero (buscar_torre2 0))1)) (buscar_rey 0))1) 1)
    ((=(jaque_caballo2 (buscar_caballo2 0) (buscar_rey 0))1) 1)
    ((=(jaque_caballo2 (buscar_caballo2 (+ (numero (buscar_caballo2 0))1)) (buscar_rey 0))1) 1)
    ((=(jaque_alfil2 (buscar_alfil2 0) (buscar_rey 0))1) 1)
    ((=(jaque_alfil2 (buscar_alfil2 (+ (numero (buscar_alfil2 0))1)) (buscar_rey 0))1) 1)
    ((=(jaque_reina2 (buscar_reina2 0)(buscar_rey 0))1) 1)
    ((=(jaque_reina2 (buscar_reina2 (+ (numero (buscar_reina2 0))1))(buscar_rey 0))1) 1)
    ((=(jaque_rey2 (buscar_rey2 0)(buscar_rey 0))1) 1)
    (else 0)
   )
 )
)
(define (jaque_blancas3 r s v i)
       (begin
         (vector-set! (vector-ref vectors v) i "caballo.gif")
         (vector-set! (vector-ref vectors r) s "vacio.gif")
         (cond
           ((=(jaque_peon2 (buscar_peon2 0)(buscar_rey 0))1) 1)
           ((=(jaque_torre2 (buscar_torre2 0) (buscar_rey 0))1) 1)
           ((=(jaque_torre2 (buscar_torre2 (+ (numero (buscar_torre2 0))1)) (buscar_rey 0))1) 1)
           ((=(jaque_caballo2 (buscar_caballo2 0) (buscar_rey 0))1) 1)
           ((=(jaque_caballo2 (buscar_caballo2 (+ (numero (buscar_caballo2 0))1)) (buscar_rey 0))1) 1)
           ((=(jaque_alfil2 (buscar_alfil2 0) (buscar_rey 0))1) 1)
           ((=(jaque_alfil2 (buscar_alfil2 (+ (numero (buscar_alfil2 0))1)) (buscar_rey 0))1) 1)
           ((= (jaque_reina2 (buscar_reina2 0)(buscar_rey 0))1) 1)
           ((=(jaque_reina2 (buscar_reina2 (+ (numero (buscar_reina2 0))1))(buscar_rey 0))1) 1)
           ((=(jaque_rey2 (buscar_rey2 0)(buscar_rey 0))1) 1)
           (else 0)
         )
       )
)
(define (jaque_blancas4 r s v i)
       (begin
         (vector-set! (vector-ref vectors v) i "alfil.gif")
         (vector-set! (vector-ref vectors r) s "vacio.gif")
         (cond
           ((=(jaque_peon2 (buscar_peon2 0)(buscar_rey 0))1) 1)
           ((=(jaque_torre2 (buscar_torre2 0) (buscar_rey 0))1) 1)
           ((=(jaque_torre2 (buscar_torre2 (+ (numero (buscar_torre2 0))1)) (buscar_rey 0))1) 1)
           ((=(jaque_caballo2 (buscar_caballo2 0) (buscar_rey 0))1) 1)
           ((=(jaque_caballo2 (buscar_caballo2 (+ (numero (buscar_caballo2 0))1)) (buscar_rey 0))1) 1)
           ((=(jaque_alfil2 (buscar_alfil2 0) (buscar_rey 0))1) 1)
           ((=(jaque_alfil2 (buscar_alfil2 (+ (numero (buscar_alfil2 0))1)) (buscar_rey 0))1) 1)
           ((=(jaque_reina2 (buscar_reina2 0)(buscar_rey 0))1) 1)
           ((=(jaque_reina2 (buscar_reina2 (+ (numero (buscar_reina2 0))1))(buscar_rey 0))1) 1)
           ((=(jaque_rey2 (buscar_rey2 0)(buscar_rey 0))1) 1)
           (else 0)
         )
       )
)
(define (jaque_blancas5 r s v i)
       (begin
         (vector-set! (vector-ref vectors v) i "reina.gif")
         (vector-set! (vector-ref vectors r) s "vacio.gif")
         (cond
           ((=(jaque_peon2 (buscar_peon2 0)(buscar_rey 0))1) 1)
           ((=(jaque_torre2 (buscar_torre2 0) (buscar_rey 0))1) 1)
           ((=(jaque_torre2 (buscar_torre2 (+ (numero (buscar_torre2 0))1)) (buscar_rey 0))1) 1)
           ((=(jaque_caballo2 (buscar_caballo2 0) (buscar_rey 0))1) 1)
           ((=(jaque_caballo2 (buscar_caballo2 (+ (numero (buscar_caballo2 0))1)) (buscar_rey 0))1) 1)
           ((=(jaque_alfil2 (buscar_alfil2 0) (buscar_rey 0))1) 1)
           ((=(jaque_alfil2 (buscar_alfil2 (+ (numero (buscar_alfil2 0))1)) (buscar_rey 0))1) 1)
           ((=(jaque_reina2 (buscar_reina2 0)(buscar_rey 0))1) 1)
           ((=(jaque_reina2 (buscar_reina2 (+ (numero (buscar_reina2 0))1))(buscar_rey 0))1) 1)
           ((=(jaque_rey2 (buscar_rey2 0)(buscar_rey 0))1) 1)
           (else 0)
         )
       )
)
(define (jaque_blancas6 r s v i)
       (begin
         (vector-set! (vector-ref vectors v) i "rey.gif")
         (vector-set! (vector-ref vectors r) s "vacio.gif")
         (cond
           ((=(jaque_peon2 (buscar_peon2 0)(buscar_rey 0))1) 1)
           ((=(jaque_torre2 (buscar_torre2 0) (buscar_rey 0))1) 1)
           ((=(jaque_torre2 (buscar_torre2 (+ (numero (buscar_torre2 0))1)) (buscar_rey 0))1) 1)
           ((=(jaque_caballo2 (buscar_caballo2 0) (buscar_rey 0))1) 1)
           ((=(jaque_caballo2 (buscar_caballo2 (+ (numero (buscar_caballo2 0))1)) (buscar_rey 0))1) 1)
           ((=(jaque_alfil2 (buscar_alfil2 0) (buscar_rey 0))1) 1)
           ((=(jaque_alfil2 (buscar_alfil2 (+ (numero (buscar_alfil2 0))1)) (buscar_rey 0))1) 1)
           ((=(jaque_reina2 (buscar_reina2 0)(buscar_rey 0))1) 1)
           ((=(jaque_reina2 (buscar_reina2 (+ (numero (buscar_reina2 0))1))(buscar_rey 0))1) 1)
           ;((equal? (que_hay2? (convertir (+(posn-x (buscar_rey 0))50)(posn-y (buscar_rey 0)))) "reina2.gif" ) 1)
           ((=(jaque_rey2 (buscar_rey2 0)(buscar_rey 0))1) 1)
           (else 0)
         )
       )
)
(define (jaque_blancas7 r s v i)
       (begin
         (vector-set! (vector-ref vectors v) i "peon2.gif")
         (vector-set! (vector-ref vectors r) s "vacio.gif")
         (cond
           ((=(jaque_peon2 (buscar_peon2 0)(buscar_rey 0))1) 1)
           ((=(jaque_torre2 (buscar_torre2 0) (buscar_rey 0))1) 1)
           ((=(jaque_torre2 (buscar_torre2 (+ (numero (buscar_torre2 0))1)) (buscar_rey 0))1) 1)
           ((=(jaque_caballo2 (buscar_caballo2 0) (buscar_rey 0))1) 1)
           ((=(jaque_caballo2 (buscar_caballo2 (+ (numero (buscar_caballo2 0))1)) (buscar_rey 0))1) 1)
           ((=(jaque_alfil2 (buscar_alfil2 0) (buscar_rey 0))1) 1)
           ((=(jaque_alfil2 (buscar_alfil2 (+ (numero (buscar_alfil2 0))1)) (buscar_rey 0))1) 1)
           ((=(jaque_reina2 (buscar_reina2 0)(buscar_rey 0))1) 1)
           ((=(jaque_reina2 (buscar_reina2 (+ (numero (buscar_reina2 0))1))(buscar_rey 0))1) 1)
           ((=(jaque_rey2 (buscar_rey2 0)(buscar_rey 0))1) 1)
           (else 0)
         )
       )
)
(define   (jaque_blancas8 r s v i)
   (begin
     (vector-set! (vector-ref vectors v) i "torre2.gif")
     (vector-set! (vector-ref vectors r) s "vacio.gif")
   (cond
    ((=(jaque_peon2 (buscar_peon2 0)(buscar_rey 0))1) 1)
    ((=(jaque_torre2 (buscar_torre2 0) (buscar_rey 0))1) 1)
    ((=(jaque_torre2 (buscar_torre2 (+ (numero (buscar_torre2 0))1)) (buscar_rey 0))1) 1)
    ((=(jaque_caballo2 (buscar_caballo2 0) (buscar_rey 0))1) 1)
    ((=(jaque_caballo2 (buscar_caballo2 (+ (numero (buscar_caballo2 0))1)) (buscar_rey 0))1) 1)
    ((=(jaque_alfil2 (buscar_alfil2 0) (buscar_rey 0))1) 1)
    ((=(jaque_alfil2 (buscar_alfil2 (+ (numero (buscar_alfil2 0))1)) (buscar_rey 0))1) 1)
    ((=(jaque_reina2 (buscar_reina2 0)(buscar_rey 0))1) 1)
    ((=(jaque_reina2 (buscar_reina2 (+ (numero (buscar_reina2 0))1))(buscar_rey 0))1) 1)
    ((=(jaque_rey2 (buscar_rey2 0)(buscar_rey 0))1) 1)
    (else 0)
   )
 )
)
(define (jaque_blancas9 r s v i)
       (begin
         (vector-set! (vector-ref vectors v) i "caballo2.gif")
         (vector-set! (vector-ref vectors r) s "vacio.gif")
         (cond
           ((=(jaque_peon2 (buscar_peon2 0)(buscar_rey 0))1) 1)
           ((=(jaque_torre2 (buscar_torre2 0) (buscar_rey 0))1) 1)
           ((=(jaque_torre2 (buscar_torre2 (+ (numero (buscar_torre2 0))1)) (buscar_rey 0))1) 1)
           ((=(jaque_caballo2 (buscar_caballo2 0) (buscar_rey 0))1) 1)
           ((=(jaque_caballo2 (buscar_caballo2 (+ (numero (buscar_caballo2 0))1)) (buscar_rey 0))1) 1)
           ((=(jaque_alfil2 (buscar_alfil2 0) (buscar_rey 0))1) 1)
           ((=(jaque_alfil2 (buscar_alfil2 (+ (numero (buscar_alfil2 0))1)) (buscar_rey 0))1) 1)
           ((=(jaque_reina2 (buscar_reina2 0)(buscar_rey 0))1) 1)
           ((=(jaque_reina2 (buscar_reina2 (+ (numero (buscar_reina2 0))1))(buscar_rey 0))1) 1)
           ((=(jaque_rey2 (buscar_rey2 0)(buscar_rey 0))1) 1)
           (else 0)
         )
       )
)
(define (jaque_blancas10 r s v i)
       (begin
         (vector-set! (vector-ref vectors v) i "alfil2.gif")
         (vector-set! (vector-ref vectors r) s "vacio.gif")
         (cond
           ((=(jaque_peon2 (buscar_peon2 0)(buscar_rey 0))1) 1)
           ((=(jaque_torre2 (buscar_torre2 0) (buscar_rey 0))1) 1)
           ((=(jaque_torre2 (buscar_torre2 (+ (numero (buscar_torre2 0))1)) (buscar_rey 0))1) 1)
           ((=(jaque_caballo2 (buscar_caballo2 0) (buscar_rey 0))1) 1)
           ((=(jaque_caballo2 (buscar_caballo2 (+ (numero (buscar_caballo2 0))1)) (buscar_rey 0))1) 1)
           ((=(jaque_alfil2 (buscar_alfil2 0) (buscar_rey 0))1) 1)
           ((=(jaque_alfil2 (buscar_alfil2 (+ (numero (buscar_alfil2 0))1)) (buscar_rey 0))1) 1)
           ((=(jaque_reina2 (buscar_reina2 0)(buscar_rey 0))1) 1)
           ((=(jaque_reina2 (buscar_reina2 (+ (numero (buscar_reina2 0))1))(buscar_rey 0))1) 1)
           ((=(jaque_rey2 (buscar_rey2 0)(buscar_rey 0))1) 1)
           (else 0)
         )
       )
)
(define (jaque_blancas11 r s v i)
       (begin
         (vector-set! (vector-ref vectors v) i "reina2.gif")
         (vector-set! (vector-ref vectors r) s "vacio.gif")
         (cond
           ((=(jaque_peon2 (buscar_peon2 0)(buscar_rey 0))1) 1)
           ((=(jaque_torre2 (buscar_torre2 0) (buscar_rey 0))1) 1)
           ((=(jaque_torre2 (buscar_torre2 (+ (numero (buscar_torre2 0))1)) (buscar_rey 0))1) 1)
           ((=(jaque_caballo2 (buscar_caballo2 0) (buscar_rey 0))1) 1)
           ((=(jaque_caballo2 (buscar_caballo2 (+ (numero (buscar_caballo2 0))1)) (buscar_rey 0))1) 1)
           ((=(jaque_alfil2 (buscar_alfil2 0) (buscar_rey 0))1) 1)
           ((=(jaque_alfil2 (buscar_alfil2 (+ (numero (buscar_alfil2 0))1)) (buscar_rey 0))1) 1)
           ((=(jaque_reina2 (buscar_reina2 0)(buscar_rey 0))1) 1)
           ((=(jaque_reina2 (buscar_reina2 (+ (numero (buscar_reina2 0))1))(buscar_rey 0))1) 1)
           ((=(jaque_rey2 (buscar_rey2 0)(buscar_rey 0))1) 1)
           (else 0)
         )
       )
)
(define (jaque_blancas12 r s v i)
       (begin
         (vector-set! (vector-ref vectors v) i "rey2.gif")
         (vector-set! (vector-ref vectors r) s "vacio.gif")
         (cond
           ((=(jaque_peon2 (buscar_peon2 0)(buscar_rey 0))1) 1)
           ((=(jaque_torre2 (buscar_torre2 0) (buscar_rey 0))1) 1)
           ((=(jaque_torre2 (buscar_torre2 (+ (numero (buscar_torre2 0))1)) (buscar_rey 0))1) 1)
           ((=(jaque_caballo2 (buscar_caballo2 0) (buscar_rey 0))1) 1)
           ((=(jaque_caballo2 (buscar_caballo2 (+ (numero (buscar_caballo2 0))1)) (buscar_rey 0))1) 1)
           ((=(jaque_alfil2 (buscar_alfil2 0) (buscar_rey 0))1) 1)
           ((=(jaque_alfil2 (buscar_alfil2 (+ (numero (buscar_alfil2 0))1)) (buscar_rey 0))1) 1)
           ((=(jaque_reina2 (buscar_reina2 0)(buscar_rey 0))1) 1)
           ((=(jaque_reina2 (buscar_reina2 (+ (numero (buscar_reina2 0))1))(buscar_rey 0))1) 1)
           ;((equal? (que_hay2? (convertir (+(posn-x (buscar_rey 0))50)(posn-y (buscar_rey 0)))) "reina2.gif" ) 1)
           ((=(jaque_rey2 (buscar_rey2 0)(buscar_rey 0))1) 1)
           (else 0)
         )
       )
)
  
(define (buscar_peon a)
  (if (< a 64)
    (begin
     (cond 
      ((equal? (que_hay2? (vector-ref posiciones a)) "peon.gif")(vector-ref posiciones a) )
      (else (buscar_peon (+ a 1)))
     )
    )
   0
  )
 )                 
        
(define (buscar_torre a)
  (if (< a 64)
    (begin
     (cond 
      ((equal? (que_hay2? (vector-ref posiciones a)) "torre.gif")(vector-ref posiciones a))
      (else (buscar_torre (+ a 1)))
     )
    )
   0
  )
 )

(define (buscar_caballo a)
  (if (< a 64)
    (begin
     (cond 
      ((equal? (que_hay2? (vector-ref posiciones a)) "caballo.gif")(vector-ref posiciones a) )
      (else (buscar_caballo (+ a 1)))
     )
    )
   0
  )
 )

(define (buscar_alfil a)
  (if (< a 64)
    (begin
     (cond 
      ((equal? (que_hay2? (vector-ref posiciones a)) "alfil.gif")(vector-ref posiciones a) )
      (else (buscar_alfil (+ a 1)))
     )
    )
   0
  )
 )

(define (buscar_reina a)
  (if (< a 64)
    (begin
     (cond 
      ((equal? (que_hay2? (vector-ref posiciones a)) "reina.gif")(vector-ref posiciones a) )
      (else (buscar_reina (+ a 1)))
     )
    )
   0
  )
 ) 
      
(define (buscar_rey a)
  (if (< a 64)
    (begin
     (cond 
      ((equal? (que_hay2? (vector-ref posiciones a)) "rey.gif")(vector-ref posiciones a))
      (else (buscar_rey (+ a 1)))
     )
    )
   g1
  )
 )

(define (buscar_peon2 a)
  (if (< a 64)
    (begin
     (cond 
      ((equal? (que_hay2? (vector-ref posiciones a)) "peon2.gif")(vector-ref posiciones a) )
      (else (buscar_peon2 (+ a 1)))
     )
    )
   0
  )
 )                 
        
(define (buscar_torre2 a)
  (if (< a 64)
    (begin
     (cond 
      ((equal? (que_hay2? (vector-ref posiciones a)) "torre2.gif")(vector-ref posiciones a))
      (else (buscar_torre2 (+ a 1)))
     )
    )
   0
  )
 )

(define (buscar_caballo2 a)
  (if (< a 64)
    (begin
     (cond 
      ((equal? (que_hay2? (vector-ref posiciones a)) "caballo2.gif")(vector-ref posiciones a) )
      (else (buscar_caballo2 (+ a 1)))
     )
    )
   0
  )
 )

(define (buscar_alfil2 a)
  (if (< a 64)
    (begin
     (cond 
      ((equal? (que_hay2? (vector-ref posiciones a)) "alfil2.gif")(vector-ref posiciones a) )
      (else (buscar_alfil2 (+ a 1)))
     )
    )
   0
  )
 )

(define (buscar_reina2 a)
  (if (< a 64)
    (begin
     (cond 
      ((equal? (que_hay2? (vector-ref posiciones a)) "reina2.gif")(vector-ref posiciones a) )
      (else (buscar_reina2 (+ a 1)))
     )
    )
   0
  )
 )

(define (buscar_rey2 a)
  (if (< a 64)
    (begin
     (cond 
      ((equal? (que_hay2? (vector-ref posiciones a)) "rey2.gif")(vector-ref posiciones a))
      (else (buscar_rey2 (+ a 1)))
     )
    )
   g8
  )
 )

(define (jaque f d c r s v i z)
  (cond
    ((= f 1)
     (if (=(jaque_blancas r s v i)1)
         (begin
           (vector-set! (vector-ref vectors v) i "vacio.gif")
           (vector-set! (vector-ref vectors r) s "peon.gif")
           (escribir 3)
           (escribir 4)
           (coordenada 0 0 0 (get-mouse-click ventana1))
          ) 
     (if (= (jaque_peon c (buscar_rey2 0)) 1)
                (begin
                  (escribir 3)
                  (escribir 2)
                  (ejecutar d c r s v i)
                )
                (if (= (jaque_negras7 r s v i) 1)
                    (begin
                      (escribir 3)
                      (escribir 2)
                      (ejecutar d c r s v i)
                    )
                    (begin
                      (escribir 3)
                      (ejecutar d c r s v i)
                    )
                )
             )
          )
    )
    ((= f 2)
     (if (=(jaque_blancas2 r s v i)1)
         (begin
           (vector-set! (vector-ref vectors v) i "vacio.gif")
           (vector-set! (vector-ref vectors r) s "torre.gif")
           (escribir 3)
           (escribir 4)
           (coordenada 0 0 0 (get-mouse-click ventana1))
          ) 
     (if (= (jaque_torre c (buscar_rey2 0)) 1)
                (begin
                  (escribir 3)
                  (escribir 2)
                  (ejecutar2 d c r s v i)
                )
                 (if (= (jaque_negras8 r s v i) 1)
                    (begin
                      (escribir 3)
                      (escribir 2)
                      (ejecutar2 d c r s v i)
                    )
                    (begin
                      (escribir 3)
                      (ejecutar2 d c r s v i)
                    )
                )
             )
          )
    )
    ((= f 3)
     (if (= (jaque_blancas3 r s v i)1)
         (begin
           (vector-set! (vector-ref vectors v) i "vacio.gif")
           (vector-set! (vector-ref vectors r) s "caballo.gif")
           (escribir 3)
           (escribir 4)
           (coordenada 0 0 0 (get-mouse-click ventana1))
          )
     (if (= (jaque_caballo c (buscar_rey2 0)) 1)
                (begin
                  (escribir 3)
                  (escribir 2)
                  (ejecutar3 d c r s v i)
                )
                 (if (= (jaque_negras9 r s v i) 1)
                    (begin
                      (escribir 3)
                      (escribir 2)
                      (ejecutar3 d c r s v i)
                    )
                    (begin
                      (escribir 3)
                      (ejecutar3 d c r s v i)
                    )
                )
             )
          )
    )
    ((= f 4)
     (if (=(jaque_blancas4 r s v i)1)
         (begin
           (vector-set! (vector-ref vectors v) i "vacio.gif")
           (vector-set! (vector-ref vectors r) s "alfil.gif")
           (escribir 3)
           (escribir 4)
           (coordenada 0 0 0 (get-mouse-click ventana1))
          )
     (if (= (jaque_alfil c (buscar_rey2 0)) 1)
                (begin
                  (escribir 3)
                  (escribir 2)
                  (ejecutar4 d c r s v i)
                )
                 (if (= (jaque_negras10 r s v i) 1)
                    (begin
                      (escribir 3)
                      (escribir 2)
                      (ejecutar4 d c r s v i)
                    )
                    (begin
                      (escribir 3)
                      (ejecutar4 d c r s v i)
                    )
                )
             )
          )
    )
    ((= f 5)
     (if (=(jaque_blancas5 r s v i)1)
         (begin
           (vector-set! (vector-ref vectors v) i "vacio.gif")
           (vector-set! (vector-ref vectors r) s "reina.gif")
           (escribir 3)
           (escribir 4)
           (coordenada 0 0 0 (get-mouse-click ventana1))
          )
     (if (= (jaque_reina c (buscar_rey2 0)) 1)
                (begin
                  (escribir 3)
                  (escribir 2)
                  (ejecutar5 d c r s v i)
                )
                 (if (= (jaque_negras11 r s v i) 1)
                    (begin
                      (escribir 3)
                      (escribir 2)
                      (ejecutar5 d c r s v i)
                    )
                    (begin
                      (escribir 3)
                      (ejecutar5 d c r s v i)
                    )
                )
             )
          )
    )
    ((= f 6)
     (if (= (jaque_blancas6 r s v i)1)
         (begin
           (vector-set! (vector-ref vectors v) i "vacio.gif")
           (vector-set! (vector-ref vectors r) s "rey.gif")
           (escribir 3)
           (escribir 4)
           (coordenada 0 0 0 (get-mouse-click ventana1))
          )
     (if (= (jaque_rey c (buscar_rey2 0)) 1)
                (begin
                  (escribir 3)
                  (escribir 2)
                  (ejecutar6 d c r s v i z)
                )
                 (if (= (jaque_negras12 r s v i) 1)
                    (begin
                      (escribir 3)
                      (escribir 2)
                      (ejecutar6 d c r s v i z)
                    )
                    (begin
                      (escribir 3)
                      (ejecutar6 d c r s v i z)
                    )
                )
             )
          )
    )
    ((= f 7)
     (if (=(jaque_negras r s v i)1)
         (begin
           (vector-set! (vector-ref vectors v) i "vacio.gif")
           (vector-set! (vector-ref vectors r) s "peon2.gif")
           (escribir 3)
           (escribir 5)
           (coordenada3 0 0 0 (get-mouse-click ventana1))
          )
     (if (= (jaque_peon2 c (buscar_rey 0)) 1)
                (begin
                  (escribir 3)
                  (escribir 1)
                  (ejecutar7 d c r s v i)
                )
                 (if (= (jaque_blancas7 r s v i) 1)
                    (begin
                      (escribir 3)
                      (escribir 2)
                      (ejecutar7 d c r s v i)
                    )
                    (begin
                      (escribir 3)
                      (ejecutar7 d c r s v i)
                    )
                )
             )
          )
    )
    ((= f 8)
     (if (=(jaque_negras2 r s v i)1)
         (begin
           (vector-set! (vector-ref vectors v) i "vacio.gif")
           (vector-set! (vector-ref vectors r) s "torre2.gif")
           (escribir 3)
           (escribir 5)
           (coordenada3 0 0 0 (get-mouse-click ventana1))
          )
     (if (= (jaque_torre2 c (buscar_rey 0)) 1)
                (begin
                  (escribir 3)
                  (escribir 1)
                  (ejecutar8 d c r s v i)
                )
                (if (= (jaque_blancas8 r s v i) 1)
                    (begin
                      (escribir 3)
                      (escribir 2)
                      (ejecutar8 d c r s v i)
                    )
                    (begin
                      (escribir 3)
                      (ejecutar8 d c r s v i)
                    )
                )
             )
          )
    )
    ((= f 9)
     (if (=(jaque_negras3 r s v i)1)
         (begin
           (vector-set! (vector-ref vectors v) i "vacio.gif")
           (vector-set! (vector-ref vectors r) s "caballo2.gif")
           (escribir 3)
           (escribir 5)
           (coordenada3 0 0 0 (get-mouse-click ventana1))
          )
     (if (= (jaque_caballo2 c (buscar_rey 0)) 1)
                (begin
                  (escribir 3)
                  (escribir 1)
                  (ejecutar9 d c r s v i)
                )
                (if (= (jaque_blancas9 r s v i) 1)
                    (begin
                      (escribir 3)
                      (escribir 2)
                      (ejecutar9 d c r s v i)
                    )
                    (begin
                      (escribir 3)
                      (ejecutar9 d c r s v i)
                    )
                )
             )
          )
    )
    ((= f 10)
     (if (=(jaque_negras4 r s v i)1)
         (begin
           (vector-set! (vector-ref vectors v) i "vacio.gif")
           (vector-set! (vector-ref vectors r) s "alfil2.gif")
           (escribir 3)
           (escribir 5)
           (coordenada3 0 0 0 (get-mouse-click ventana1))
          )
     (if (= (jaque_alfil2 c (buscar_rey 0)) 1)
                (begin
                  (escribir 3)
                  (escribir 1)
                  (ejecutar10 d c r s v i)
                )
                (if (= (jaque_blancas10 r s v i) 1)
                    (begin
                      (escribir 3)
                      (escribir 2)
                      (ejecutar10 d c r s v i)
                    )
                    (begin
                      (escribir 3)
                      (ejecutar10 d c r s v i)
                    )
                )
             )
          )
    )
    ((= f 11)
     (if (=(jaque_negras5 r s v i)1)
         (begin
           (vector-set! (vector-ref vectors v) i "vacio.gif")
           (vector-set! (vector-ref vectors r) s "reina2.gif")
           (escribir 3)
           (escribir 5)
           (coordenada3 0 0 0 (get-mouse-click ventana1))
          )
     (if (= (jaque_reina2 c (buscar_rey 0)) 1)
                (begin
                  (escribir 3)
                  (escribir 1)
                  (ejecutar11 d c r s v i)
                )
                (if (= (jaque_blancas11 r s v i) 1)
                    (begin
                      (escribir 3)
                      (escribir 2)
                      (ejecutar11 d c r s v i)
                    )
                    (begin
                      (escribir 3)
                      (ejecutar11 d c r s v i)
                    )
                )
             )
          )
    )
    ((= f 12)
     (if (= (jaque_negras6 r s v i)1)
         (begin
           (vector-set! (vector-ref vectors v) i "vacio.gif")
           (vector-set! (vector-ref vectors r) s "rey2.gif")
           (escribir 3)
           (escribir 5)
           (coordenada3 0 0 0 (get-mouse-click ventana1))
          )
     (if (= (jaque_rey2 c (buscar_rey 0)) 1)
                (begin
                  (escribir 3)
                  (escribir 1)
                  (ejecutar12 d c r s v i z)
                )
                (if (= (jaque_blancas12 r s v i) 1)
                    (begin
                      (escribir 3)
                      (escribir 2)
                      (ejecutar12 d c r s v i z)
                    )
                    (begin
                      (escribir 3)
                      (ejecutar12 d c r s v i z)
                    )
                )
             )
          )
    )
    
  )
)

;*************************************
; complemento de la funcion compilar *___________________________________________________________________________________________-
;*************************************

(define (compilar2 f d c r s v i z)
  (cond
    ((equal? c a1)(que_es f d c r s 0 0 1))
    ((equal? c a2)(que_es f d c r s 1 0 1))
    ((equal? c a3)(que_es f d c r s 2 0 1))
    ((equal? c a4)(que_es f d c r s 3 0 1))
    ((equal? c a5)(que_es f d c r s 4 0 1))
    ((equal? c a6)(que_es f d c r s 5 0 1))
    ((equal? c a7)(que_es f d c r s 6 0 1))
    ((equal? c a8)(que_es f d c r s 7 0 1))
    ((equal? c b1)(que_es f d c r s 0 1 1))
    ((equal? c b2)(que_es f d c r s 1 1 1))
    ((equal? c b3)(que_es f d c r s 2 1 1))
    ((equal? c b4)(que_es f d c r s 3 1 1))
    ((equal? c b5)(que_es f d c r s 4 1 1))
    ((equal? c b6)(que_es f d c r s 5 1 1))
    ((equal? c b7)(que_es f d c r s 6 1 1))
    ((equal? c b8)(que_es f d c r s 7 1 1))
    ((equal? c c1)(que_es f d c r s 0 2 1))
    ((equal? c c2)(que_es f d c r s 1 2 1))
    ((equal? c c3)(que_es f d c r s 2 2 1))
    ((equal? c c4)(que_es f d c r s 3 2 1))
    ((equal? c c5)(que_es f d c r s 4 2 1))
    ((equal? c c6)(que_es f d c r s 5 2 1))
    ((equal? c c7)(que_es f d c r s 6 2 1))
    ((equal? c c8)(que_es f d c r s 7 2 1))
    ((equal? c d1)(que_es f d c r s 0 3 1))
    ((equal? c d2)(que_es f d c r s 1 3 1))
    ((equal? c d3)(que_es f d c r s 2 3 1))
    ((equal? c d4)(que_es f d c r s 3 3 1))
    ((equal? c d5)(que_es f d c r s 4 3 1))
    ((equal? c d6)(que_es f d c r s 5 3 1))
    ((equal? c d7)(que_es f d c r s 6 3 1))
    ((equal? c d8)(que_es f d c r s 7 3 1))
    ((equal? c e1)(que_es f d c r s 0 4 1))
    ((equal? c e2)(que_es f d c r s 1 4 1))
    ((equal? c e3)(que_es f d c r s 2 4 1))
    ((equal? c e4)(que_es f d c r s 3 4 1))
    ((equal? c e5)(que_es f d c r s 4 4 1))
    ((equal? c e6)(que_es f d c r s 5 4 1))
    ((equal? c e7)(que_es f d c r s 6 4 1))
    ((equal? c e8)(que_es f d c r s 7 4 1))
    ((equal? c f1)(que_es f d c r s 0 5 1))
    ((equal? c f2)(que_es f d c r s 1 5 1))
    ((equal? c f3)(que_es f d c r s 2 5 1))
    ((equal? c f4)(que_es f d c r s 3 5 1))
    ((equal? c f5)(que_es f d c r s 4 5 1))
    ((equal? c f6)(que_es f d c r s 5 5 1))
    ((equal? c f7)(que_es f d c r s 6 5 1))
    ((equal? c f8)(que_es f d c r s 7 5 1))
    ((equal? c g1)(que_es f d c r s 0 6 1))
    ((equal? c g2)(que_es f d c r s 1 6 1))
    ((equal? c g3)(que_es f d c r s 2 6 1))
    ((equal? c g4)(que_es f d c r s 3 6 1))
    ((equal? c g5)(que_es f d c r s 4 6 1))
    ((equal? c g6)(que_es f d c r s 5 6 1))
    ((equal? c g7)(que_es f d c r s 6 6 1))
    ((equal? c g8)(que_es f d c r s 7 6 1))
    ((equal? c h1)(que_es f d c r s 0 7 1))
    ((equal? c h2)(que_es f d c r s 1 7 1))
    ((equal? c h3)(que_es f d c r s 2 7 1))
    ((equal? c h4)(que_es f d c r s 3 7 1))
    ((equal? c h5)(que_es f d c r s 4 7 1))
    ((equal? c h6)(que_es f d c r s 5 7 1))
    ((equal? c h7)(que_es f d c r s 6 7 1))
    ((equal? c h8)(que_es f d c r s 7 7 1))
    (else "fin")
   )
)

;******************************************************
; Establece parametros de una posicion predeterminada *___________________________________________________________________
;******************************************************

(define (compilar? f d c r s v i z)
  (cond
    ((equal? d a1)(compilar2 f d c 0 0 0 0 0))
    ((equal? d a2)(compilar2 f d c 1 0 0 0 0))
    ((equal? d a3)(compilar2 f d c 2 0 0 0 0))
    ((equal? d a4)(compilar2 f d c 3 0 0 0 0))
    ((equal? d a5)(compilar2 f d c 4 0 0 0 0))
    ((equal? d a6)(compilar2 f d c 5 0 0 0 0))
    ((equal? d a7)(compilar2 f d c 6 0 0 0 0))
    ((equal? d a8)(compilar2 f d c 7 0 0 0 0))
    ((equal? d b1)(compilar2 f d c 0 1 0 0 0))
    ((equal? d b2)(compilar2 f d c 1 1 0 0 0))
    ((equal? d b3)(compilar2 f d c 2 1 0 0 0))
    ((equal? d b4)(compilar2 f d c 3 1 0 0 0))
    ((equal? d b5)(compilar2 f d c 4 1 0 0 0))
    ((equal? d b6)(compilar2 f d c 5 1 0 0 0))
    ((equal? d b7)(compilar2 f d c 6 1 0 0 0))
    ((equal? d b8)(compilar2 f d c 7 1 0 0 0))
    ((equal? d c1)(compilar2 f d c 0 2 0 0 0))
    ((equal? d c2)(compilar2 f d c 1 2 0 0 0))
    ((equal? d c3)(compilar2 f d c 2 2 0 0 0))
    ((equal? d c4)(compilar2 f d c 3 2 0 0 0))
    ((equal? d c5)(compilar2 f d c 4 2 0 0 0))
    ((equal? d c6)(compilar2 f d c 5 2 0 0 0))
    ((equal? d c7)(compilar2 f d c 6 2 0 0 0))
    ((equal? d c8)(compilar2 f d c 7 2 0 0 0))
    ((equal? d d1)(compilar2 f d c 0 3 0 0 0))
    ((equal? d d2)(compilar2 f d c 1 3 0 0 0))
    ((equal? d d3)(compilar2 f d c 2 3 0 0 0))
    ((equal? d d4)(compilar2 f d c 3 3 0 0 0))
    ((equal? d d5)(compilar2 f d c 4 3 0 0 0))
    ((equal? d d6)(compilar2 f d c 5 3 0 0 0))
    ((equal? d d7)(compilar2 f d c 6 3 0 0 0))
    ((equal? d d8)(compilar2 f d c 7 3 0 0 0))
    ((equal? d e1)(compilar2 f d c 0 4 0 0 0))
    ((equal? d e2)(compilar2 f d c 1 4 0 0 0))
    ((equal? d e3)(compilar2 f d c 2 4 0 0 0))
    ((equal? d e4)(compilar2 f d c 3 4 0 0 0))
    ((equal? d e5)(compilar2 f d c 4 4 0 0 0))
    ((equal? d e6)(compilar2 f d c 5 4 0 0 0))
    ((equal? d e7)(compilar2 f d c 6 4 0 0 0))
    ((equal? d e8)(compilar2 f d c 7 4 0 0 0))
    ((equal? d f1)(compilar2 f d c 0 5 0 0 0))
    ((equal? d f2)(compilar2 f d c 1 5 0 0 0))
    ((equal? d f3)(compilar2 f d c 2 5 0 0 0))
    ((equal? d f4)(compilar2 f d c 3 5 0 0 0))
    ((equal? d f5)(compilar2 f d c 4 5 0 0 0))
    ((equal? d f6)(compilar2 f d c 5 5 0 0 0))
    ((equal? d f7)(compilar2 f d c 6 5 0 0 0))
    ((equal? d f8)(compilar2 f d c 7 5 0 0 0))
    ((equal? d g1)(compilar2 f d c 0 6 0 0 0))
    ((equal? d g2)(compilar2 f d c 1 6 0 0 0))
    ((equal? d g3)(compilar2 f d c 2 6 0 0 0))
    ((equal? d g4)(compilar2 f d c 3 6 0 0 0))
    ((equal? d g5)(compilar2 f d c 4 6 0 0 0))
    ((equal? d g6)(compilar2 f d c 5 6 0 0 0))
    ((equal? d g7)(compilar2 f d c 6 6 0 0 0))
    ((equal? d g8)(compilar2 f d c 7 6 0 0 0))
    ((equal? d h1)(compilar2 f d c 0 7 0 0 0))
    ((equal? d h2)(compilar2 f d c 1 7 0 0 0))
    ((equal? d h3)(compilar2 f d c 2 7 0 0 0))
    ((equal? d h4)(compilar2 f d c 3 7 0 0 0))
    ((equal? d h5)(compilar2 f d c 4 7 0 0 0))
    ((equal? d h6)(compilar2 f d c 5 7 0 0 0))
    ((equal? d h7)(compilar2 f d c 6 7 0 0 0))
    ((equal? d h8)(compilar2 f d c 7 7 0 0 0))
    (else "fin")
   )
)

;****************************************************************************
; Esta funcion borra las ficha en una posicion pedida tiene llamados de las *____________________________________________________
; funciones de dezplazamiento y funciones como comer                        *
;****************************************************************************
(define (borrar c)
  (cond
    ((equal? c a1)((draw-solid-rectangle ventana1) (make-posn 60 400) 40 49 "gray"))
    ((equal? c a2)((draw-solid-rectangle ventana1) (make-posn 60 350) 40 50 "white"))
    ((equal? c a3)((draw-solid-rectangle ventana1) (make-posn 60 300) 40 50 "gray"))
    ((equal? c a4)((draw-solid-rectangle ventana1) (make-posn 60 250) 40 50 "white"))
    ((equal? c a5)((draw-solid-rectangle ventana1) (make-posn 60 200) 40 50 "gray"))
    ((equal? c a6)((draw-solid-rectangle ventana1) (make-posn 60 150) 40 50 "white"))
    ((equal? c a7)((draw-solid-rectangle ventana1) (make-posn 60 100) 40 50 "gray"))
    ((equal? c a8)((draw-solid-rectangle ventana1) (make-posn 60 51) 40 49 "white")) 
    ((equal? c b1)((draw-solid-rectangle ventana1) (make-posn 110 400) 40 49 "white"))
    ((equal? c b2)((draw-solid-rectangle ventana1) (make-posn 110 350) 40 50 "gray"))
    ((equal? c b3)((draw-solid-rectangle ventana1) (make-posn 110 300) 40 50 "white"))
    ((equal? c b4)((draw-solid-rectangle ventana1) (make-posn 110 250) 40 50 "gray"))
    ((equal? c b5)((draw-solid-rectangle ventana1) (make-posn 110 200) 40 50 "white"))
    ((equal? c b6)((draw-solid-rectangle ventana1) (make-posn 110 150) 40 50 "gray"))
    ((equal? c b7)((draw-solid-rectangle ventana1) (make-posn 110 100) 40 50 "white"))
    ((equal? c b8)((draw-solid-rectangle ventana1) (make-posn 110 51) 40 49 "gray"))
    ((equal? c c1)((draw-solid-rectangle ventana1) (make-posn 160 400) 40 49 "gray"))
    ((equal? c c2)((draw-solid-rectangle ventana1) (make-posn 160 350) 40 50 "white"))
    ((equal? c c3)((draw-solid-rectangle ventana1) (make-posn 160 300) 40 50 "gray"))
    ((equal? c c4)((draw-solid-rectangle ventana1) (make-posn 160 250) 40 50 "white"))
    ((equal? c c5)((draw-solid-rectangle ventana1) (make-posn 160 200) 40 50 "gray"))
    ((equal? c c6)((draw-solid-rectangle ventana1) (make-posn 160 150) 40 50 "white"))
    ((equal? c c7)((draw-solid-rectangle ventana1) (make-posn 160 100) 40 50 "gray"))
    ((equal? c c8)((draw-solid-rectangle ventana1) (make-posn 160 51) 40 49 "white"))
    ((equal? c d1)((draw-solid-rectangle ventana1) (make-posn 210 400) 40 49 "white"))
    ((equal? c d2)((draw-solid-rectangle ventana1) (make-posn 210 350) 40 50 "gray"))
    ((equal? c d3)((draw-solid-rectangle ventana1) (make-posn 210 300) 40 50 "white"))
    ((equal? c d4)((draw-solid-rectangle ventana1) (make-posn 210 250) 40 50 "gray"))
    ((equal? c d5)((draw-solid-rectangle ventana1) (make-posn 210 200) 40 50 "white"))
    ((equal? c d6)((draw-solid-rectangle ventana1) (make-posn 210 150) 40 50 "gray"))
    ((equal? c d7)((draw-solid-rectangle ventana1) (make-posn 210 100) 40 50 "white"))
    ((equal? c d8)((draw-solid-rectangle ventana1) (make-posn 210 51) 40 49 "gray"))
    ((equal? c e1)((draw-solid-rectangle ventana1) (make-posn 260 400) 40 49 "gray"))
    ((equal? c e2)((draw-solid-rectangle ventana1) (make-posn 260 350) 40 50 "white"))
    ((equal? c e3)((draw-solid-rectangle ventana1) (make-posn 260 300) 40 50 "gray"))
    ((equal? c e4)((draw-solid-rectangle ventana1) (make-posn 260 250) 40 50 "white"))
    ((equal? c e5)((draw-solid-rectangle ventana1) (make-posn 260 200) 40 50 "gray"))
    ((equal? c e6)((draw-solid-rectangle ventana1) (make-posn 260 150) 40 50 "white"))
    ((equal? c e7)((draw-solid-rectangle ventana1) (make-posn 260 100) 40 50 "gray"))
    ((equal? c e8)((draw-solid-rectangle ventana1) (make-posn 260 51) 40 49 "white"))
    ((equal? c f1)((draw-solid-rectangle ventana1) (make-posn 310 400) 40 49 "white"))
    ((equal? c f2)((draw-solid-rectangle ventana1) (make-posn 310 350) 40 50 "gray"))
    ((equal? c f3)((draw-solid-rectangle ventana1) (make-posn 310 300) 40 50 "white"))
    ((equal? c f4)((draw-solid-rectangle ventana1) (make-posn 310 250) 40 50 "gray"))
    ((equal? c f5)((draw-solid-rectangle ventana1) (make-posn 310 200) 40 50 "white"))
    ((equal? c f6)((draw-solid-rectangle ventana1) (make-posn 310 150) 40 50 "gray"))
    ((equal? c f7)((draw-solid-rectangle ventana1) (make-posn 310 100) 40 50 "white"))
    ((equal? c f8)((draw-solid-rectangle ventana1) (make-posn 310 51) 40 49 "gray"))
    ((equal? c g1)((draw-solid-rectangle ventana1) (make-posn 360 400) 40 49 "gray"))
    ((equal? c g2)((draw-solid-rectangle ventana1) (make-posn 360 350) 40 50 "white"))
    ((equal? c g3)((draw-solid-rectangle ventana1) (make-posn 360 300) 40 50 "gray"))
    ((equal? c g4)((draw-solid-rectangle ventana1) (make-posn 360 250) 40 50 "white"))
    ((equal? c g5)((draw-solid-rectangle ventana1) (make-posn 360 200) 40 50 "gray"))
    ((equal? c g6)((draw-solid-rectangle ventana1) (make-posn 360 150) 40 50 "white"))
    ((equal? c g7)((draw-solid-rectangle ventana1) (make-posn 360 100) 40 50 "gray"))
    ((equal? c g8)((draw-solid-rectangle ventana1) (make-posn 360 51) 40 49 "white"))
    ((equal? c h1)((draw-solid-rectangle ventana1) (make-posn 410 400) 35 49 "white"))
    ((equal? c h2)((draw-solid-rectangle ventana1) (make-posn 410 350) 35 50 "gray"))
    ((equal? c h3)((draw-solid-rectangle ventana1) (make-posn 410 300) 35 50 "white"))
    ((equal? c h4)((draw-solid-rectangle ventana1) (make-posn 410 250) 35 50 "gray")) 
    ((equal? c h5)((draw-solid-rectangle ventana1) (make-posn 410 200) 35 50 "white"))
    ((equal? c h6)((draw-solid-rectangle ventana1) (make-posn 410 150) 35 50 "gray"))
    ((equal? c h7)((draw-solid-rectangle ventana1) (make-posn 410 100) 35 50 "white"))
    ((equal? c h8)((draw-solid-rectangle ventana1) (make-posn 410 51) 35 49 "gray"))
   )
 )
;*************************************************************************************
; establace si los parametros dados para el movimiento de la ficha establacida esta  *__________________________________________________
; determinado de forma correcta                                                      *
;*************************************************************************************

(define (se_puede_peon d c r s v i e) 
  (if (=(posn-y e)(+ (posn-y c) 100))
     (if (and (equal? (que_hay2? c)"vacio.gif")(equal? (que_hay2? (convertir (posn-x d)(-(posn-y d)50)))"vacio.gif"))
          (jaque 1 d c r s v i 0)
          (coordenada 0 0 0 (get-mouse-click ventana1))
     )
     (cond
          ((and (= (posn-x d)(- (posn-x c)50))(= (posn-y d)(+ (posn-y c)50))(equal? (que_hay2? c)"peon2.gif"))(jaque 1 d c r s v i 0))
          ((and (= (posn-x d)(- (posn-x c)50))(= (posn-y d)(+ (posn-y c)50))(equal? (que_hay2? c)"torre2.gif"))(jaque 1 d c r s v i 0))
          ((and (= (posn-x d)(- (posn-x c)50))(= (posn-y d)(+ (posn-y c)50))(equal? (que_hay2? c)"caballo2.gif"))(jaque 1 d c r s v i 0))
          ((and (= (posn-x d)(- (posn-x c)50))(= (posn-y d)(+ (posn-y c)50))(equal? (que_hay2? c)"alfil2.gif"))(jaque 1 d c r s v i 0))
          ((and (= (posn-x d)(- (posn-x c)50))(= (posn-y d)(+ (posn-y c)50))(equal? (que_hay2? c)"reina2.gif"))(jaque 1 d c r s v i 0))
          ((and (= (posn-x d)(+ (posn-x c)50))(= (posn-y d)(+ (posn-y c)50))(equal? (que_hay2? c)"peon2.gif"))(jaque 1 d c r s v i 0))
          ((and (= (posn-x d)(+ (posn-x c)50))(= (posn-y d)(+ (posn-y c)50))(equal? (que_hay2? c)"torre2.gif"))(jaque 1 d c r s v i 0))
          ((and (= (posn-x d)(+ (posn-x c)50))(= (posn-y d)(+ (posn-y c)50))(equal? (que_hay2? c)"caballo2.gif"))(jaque 1 d c r s v i 0))
          ((and (= (posn-x d)(+ (posn-x c)50))(= (posn-y d)(+ (posn-y c)50))(equal? (que_hay2? c)"alfil2.gif"))(jaque 1 d c r s v i 0))
          ((and (= (posn-x d)(+ (posn-x c)50))(= (posn-y d)(+ (posn-y c)50))(equal? (que_hay2? c)"reina2.gif"))(jaque 1 d c r s v i 0))
          ((and (= (posn-x d)(posn-x c))(= (posn-y d)(+ (posn-y c)50))(equal? (que_hay2? c)"vacio.gif"))(jaque 1 d c r s v i 0))
          (else (coordenada 0 0 0 (get-mouse-click ventana1)))
     )
  )
)
(define (se_puede_torre  d c r s v i e)
  (if (equal? e c )
      (cond
        ((equal? (que_hay2? c) "vacio.gif")(jaque 2 d c r s v i 0)) 
        ((equal? (que_hay2? c) "peon2.gif")(jaque 2 d c r s v i 0))
        ((equal? (que_hay2? c) "torre2.gif")(jaque 2 d c r s v i 0))
        ((equal? (que_hay2? c) "reina2.gif")(jaque 2 d c r s v i 0))
        ((equal? (que_hay2? c) "caballo2.gif")(jaque 2 d c r s v i 0))
        ((equal? (que_hay2? c) "alfil2.gif")(jaque 2 d c r s v i 0))
        (else (coordenada 0 0 0 (get-mouse-click ventana1)))
      )
      (cond
        ((and (= (posn-x e)(posn-x c))(< (posn-y e)(-(posn-y c)50))(equal? (que_hay2? (convertir (posn-x e)(+(posn-y e)50)))"vacio.gif"))(se_puede_torre d c r s v i (convertir (posn-x e)(+(posn-y e)50))))
        ((and (= (posn-x e)(posn-x c))(= (posn-y e)(-(posn-y c)50)))(se_puede_torre d c r s v i (convertir (posn-x e)(+(posn-y e)50))))
        ((and (= (posn-x e)(posn-x c))(> (posn-y e)(+(posn-y c)50))(equal? (que_hay2? (convertir (posn-x e)(-(posn-y e)50)))"vacio.gif"))(se_puede_torre d c r s v i (convertir (posn-x e)(-(posn-y e)50))))
        ((and (= (posn-x e)(posn-x c))(= (posn-y e)(+(posn-y c)50)))(se_puede_torre d c r s v i (convertir (posn-x e)(-(posn-y e)50))))
        ((and (> (posn-x e)(+(posn-x c)50))(= (posn-y e)(posn-y c))(equal? (que_hay2? (convertir (-(posn-x e)50)(posn-y e)))"vacio.gif"))(se_puede_torre d c r s v i (convertir (-(posn-x e)50)(posn-y e))))
        ((and (= (posn-x e)(+(posn-x c)50))(= (posn-y e)(posn-y c)))(se_puede_torre d c r s v i (convertir (-(posn-x e)50)(posn-y e))))
        ((and (< (posn-x e)(-(posn-x c)50))(= (posn-y e)(posn-y c))(equal? (que_hay2? (convertir (+(posn-x e)50)(posn-y e)))"vacio.gif"))(se_puede_torre d c r s v i (convertir (+(posn-x e)50)(posn-y e)))) 
        ((and (= (posn-x e)(-(posn-x c)50))(= (posn-y e)(posn-y c)))(se_puede_torre d c r s v i (convertir (+(posn-x e)50)(posn-y e))))
        (else (coordenada 0 0 0 (get-mouse-click ventana1)))
      )
   )
 )
(define (se_puede_caballo d c r s v i)
  (cond
     ((equal? (que_hay2? c) "vacio.gif")(jaque 3 d c r s v i 0))  
     ((equal? (que_hay2? c) "peon2.gif")(jaque 3 d c r s v i 0))
     ((equal? (que_hay2? c) "torre2.gif")(jaque 3 d c r s v i 0))
     ((equal? (que_hay2? c) "reina2.gif")(jaque 3 d c r s v i 0))
     ((equal? (que_hay2? c) "caballo2.gif")(jaque 3 d c r s v i 0))
     ((equal? (que_hay2? c) "alfil2.gif")(jaque 3 d c r s v i 0))
     (else (coordenada 0 0 0 (get-mouse-click ventana1)))
  )
)
(define (se_puede_alfil d c r s v i e)
  (if (equal? e c)
      (begin
        (cond
        ((equal? (que_hay2? c) "vacio.gif")(jaque 4 d c r s v i 0)) 
        ((equal? (que_hay2? c) "peon2.gif")(jaque 4 d c r s v i 0))
        ((equal? (que_hay2? c) "torre2.gif")(jaque 4 d c r s v i 0))
        ((equal? (que_hay2? c) "reina2.gif")(jaque 4 d c r s v i 0))
        ((equal? (que_hay2? c) "caballo2.gif")(jaque 4 d c r s v i 0))
        ((equal? (que_hay2? c) "alfil2.gif")(jaque 4 d c r s v i 0))
        (else (coordenada 0 0 0 (get-mouse-click ventana1)))
        )
      )
   (cond
     ((and (< (posn-x e)(-(posn-x c)50))(< (posn-y e)(-(posn-y c)50))(equal? (que_hay2? (convertir (+(posn-x e)50)(+(posn-y e)50)))"vacio.gif"))(se_puede_alfil d c r s v i (convertir (+(posn-x e)50)(+(posn-y e)50))))
     ((and (= (posn-x e)(-(posn-x c)50))(= (posn-y e)(-(posn-y c)50)))(se_puede_alfil d c r s v i (convertir (+(posn-x e)50)(+(posn-y e)50))))
     ((and (> (posn-x e)(+(posn-x c)50))(> (posn-y e)(+(posn-y c)50))(equal? (que_hay2? (convertir (-(posn-x e)50)(-(posn-y e)50)))"vacio.gif"))(se_puede_alfil d c r s v i (convertir (-(posn-x e)50)(-(posn-y e)50))))
     ((and (= (posn-x e)(+(posn-x c)50))(= (posn-y e)(+(posn-y c)50)))(se_puede_alfil d c r s v i (convertir (-(posn-x e)50)(-(posn-y e)50))))
     ((and (> (posn-x e)(+(posn-x c)50))(< (posn-y e)(-(posn-y c)50))(equal? (que_hay2? (convertir (-(posn-x e)50)(+(posn-y e)50)))"vacio.gif"))(se_puede_alfil d c r s v i (convertir (-(posn-x e)50)(+(posn-y e)50))))
     ((and (= (posn-x e)(+(posn-x c)50))(= (posn-y e)(-(posn-y c)50)))(se_puede_alfil d c r s v i (convertir (-(posn-x e)50)(+(posn-y e)50))))
     ((and (< (posn-x e)(-(posn-x c)50))(> (posn-y e)(+(posn-y c)50))(equal? (que_hay2? (convertir (+(posn-x e)50)(-(posn-y e)50)))"vacio.gif"))(se_puede_alfil d c r s v i (convertir (+(posn-x e)50)(-(posn-y e)50)))) 
     ((and (= (posn-x e)(-(posn-x c)50))(= (posn-y e)(+(posn-y c)50)))(se_puede_alfil d c r s v i (convertir (+(posn-x e)50)(-(posn-y e)50))))
     (else (coordenada 0 0 0 (get-mouse-click ventana1)))
   )
 )
)
(define (se_puede_reina d c r s v i e)
   (if (equal? e c)
      (begin
        (cond
        ((equal? (que_hay2? c) "vacio.gif")(jaque 5 d c r s v i 0)) 
        ((equal? (que_hay2? c) "peon2.gif")(jaque 5 d c r s v i 0))
        ((equal? (que_hay2? c) "torre2.gif")(jaque 5 d c r s v i 0))
        ((equal? (que_hay2? c) "reina2.gif")(jaque 5 d c r s v i 0))
        ((equal? (que_hay2? c) "caballo2.gif")(jaque 5 d c r s v i 0))
        ((equal? (que_hay2? c) "alfil2.gif")(jaque 5 d c r s v i 0))
        (else (coordenada 0 0 0 (get-mouse-click ventana1)))
        )
      )
   (cond
     ((and (< (posn-x e)(-(posn-x c)50))(< (posn-y e)(-(posn-y c)50))(equal? (que_hay2? (convertir (+(posn-x e)50)(+(posn-y e)50)))"vacio.gif"))(se_puede_reina d c r s v i (convertir (+(posn-x e)50)(+(posn-y e)50))))
     ((and (= (posn-x e)(-(posn-x c)50))(= (posn-y e)(-(posn-y c)50)))(se_puede_reina d c r s v i (convertir (+(posn-x e)50)(+(posn-y e)50))))
     ((and (> (posn-x e)(+(posn-x c)50))(> (posn-y e)(+(posn-y c)50))(equal? (que_hay2? (convertir (-(posn-x e)50)(-(posn-y e)50)))"vacio.gif"))(se_puede_reina d c r s v i (convertir (-(posn-x e)50)(-(posn-y e)50))))
     ((and (= (posn-x e)(+(posn-x c)50))(= (posn-y e)(+(posn-y c)50)))(se_puede_reina d c r s v i (convertir (-(posn-x e)50)(-(posn-y e)50))))
     ((and (> (posn-x e)(+(posn-x c)50))(< (posn-y e)(-(posn-y c)50))(equal? (que_hay2? (convertir (-(posn-x e)50)(+(posn-y e)50)))"vacio.gif"))(se_puede_reina d c r s v i (convertir (-(posn-x e)50)(+(posn-y e)50))))
     ((and (= (posn-x e)(+(posn-x c)50))(= (posn-y e)(-(posn-y c)50)))(se_puede_reina d c r s v i (convertir (-(posn-x e)50)(+(posn-y e)50))))
     ((and (< (posn-x e)(-(posn-x c)50))(> (posn-y e)(+(posn-y c)50))(equal? (que_hay2? (convertir (+(posn-x e)50)(-(posn-y e)50)))"vacio.gif"))(se_puede_reina d c r s v i (convertir (+(posn-x e)50)(-(posn-y e)50)))) 
     ((and (= (posn-x e)(-(posn-x c)50))(= (posn-y e)(+(posn-y c)50)))(se_puede_reina d c r s v i (convertir (+(posn-x e)50)(-(posn-y e)50))))
     ((and (= (posn-x e)(posn-x c))(< (posn-y e)(-(posn-y c)50))(equal? (que_hay2? (convertir (posn-x e)(+(posn-y e)50)))"vacio.gif"))(se_puede_reina d c r s v i (convertir (posn-x e)(+(posn-y e)50))))
     ((and (= (posn-x e)(posn-x c))(= (posn-y e)(-(posn-y c)50)))(se_puede_reina d c r s v i (convertir (posn-x e)(+(posn-y e)50))))
     ((and (= (posn-x e)(posn-x c))(> (posn-y e)(+(posn-y c)50))(equal? (que_hay2? (convertir (posn-x e)(-(posn-y e)50)))"vacio.gif"))(se_puede_reina d c r s v i (convertir (posn-x e)(-(posn-y e)50))))
     ((and (= (posn-x e)(posn-x c))(= (posn-y e)(+(posn-y c)50)))(se_puede_reina d c r s v i (convertir (posn-x e)(-(posn-y e)50))))
     ((and (> (posn-x e)(+(posn-x c)50))(= (posn-y e)(posn-y c))(equal? (que_hay2? (convertir (-(posn-x e)50)(posn-y e)))"vacio.gif"))(se_puede_reina d c r s v i (convertir (-(posn-x e)50)(posn-y e))))
     ((and (= (posn-x e)(+(posn-x c)50))(= (posn-y e)(posn-y c)))(se_puede_reina d c r s v i (convertir (-(posn-x e)50)(posn-y e))))
     ((and (< (posn-x e)(-(posn-x c)50))(= (posn-y e)(posn-y c))(equal? (que_hay2? (convertir (+(posn-x e)50)(posn-y e)))"vacio.gif"))(se_puede_reina d c r s v i (convertir (+(posn-x e)50)(posn-y e)))) 
     ((and (= (posn-x e)(-(posn-x c)50))(= (posn-y e)(posn-y c)))(se_puede_reina d c r s v i (convertir (+(posn-x e)50)(posn-y e))))
     (else (coordenada 0 0 0 (get-mouse-click ventana1)))
    )
   )
 )
(define (se_puede_rey d c r s v i e)
 (if (or (and (equal? d e1)(equal? c h1))(and (equal? d e1)(equal? c a1)))
     (if (equal? (que_hay2? c) "torre.gif")
     (cond
     ((and (< (posn-x e)(-(posn-x c)50))(= (posn-y e)(posn-y c))(equal? (que_hay2? (convertir (+(posn-x e)50)(posn-y e)))"vacio.gif"))(se_puede_rey d c r s v i (convertir (+(posn-x e)50)(posn-y e)))) 
     ((and (= (posn-x e)(-(posn-x c)50))(= (posn-y e)(posn-y c)))(ejecutar6 d c r s v i 1))
     ((and (> (posn-x e)(+(posn-x c)50))(= (posn-y e)(posn-y c))(equal? (que_hay2? (convertir (-(posn-x e)50)(posn-y e)))"vacio.gif"))(se_puede_rey d c r s v i (convertir (-(posn-x e)50)(posn-y e)))) 
     ((and (= (posn-x e)(+(posn-x c)50))(= (posn-y e)(posn-y c)))(ejecutar6 d c r s v i 2))
     (else (coordenada 0 0 0 (get-mouse-click ventana1)))
     )
     (cond
        ((equal? (que_hay2? c) "vacio.gif")(jaque 6 d c r s v i 0)) 
        ((equal? (que_hay2? c) "peon2.gif")(jaque 6 d c r s v i 0))
        ((equal? (que_hay2? c) "torre2.gif")(jaque 6 d c r s v i 0))
        ((equal? (que_hay2? c) "reina2.gif")(jaque 6 d c r s v i 0))
        ((equal? (que_hay2? c) "caballo2.gif")(jaque 6 d c r s v i 0))
        ((equal? (que_hay2? c) "alfil2.gif")(jaque 6 d c r s v i 0))
        (else (coordenada 0 0 0 (get-mouse-click ventana1)))
   )
 )
  (cond
        ((equal? (que_hay2? c) "vacio.gif")(jaque 6 d c r s v i 0)) 
        ((equal? (que_hay2? c) "peon2.gif")(jaque 6 d c r s v i 0))
        ((equal? (que_hay2? c) "torre2.gif")(jaque 6 d c r s v i 0))
        ((equal? (que_hay2? c) "reina2.gif")(jaque 6 d c r s v i 0))
        ((equal? (que_hay2? c) "caballo2.gif")(jaque 6 d c r s v i 0))
        ((equal? (que_hay2? c) "alfil2.gif")(jaque 6 d c r s v i 0))
        (else (coordenada 0 0 0 (get-mouse-click ventana1)))
   )
 )
)    
(define (se_puede_peon2 d c r s v i e) 
  (if (=(posn-y e)(- (posn-y c) 100))
     (if (and (equal? (que_hay2? c) "vacio.gif")(equal? (que_hay2? (convertir (posn-x d)(+(posn-y d)50)))"vacio.gif"))
          (jaque 7 d c r s v i 0)
          (coordenada3 0 0 0 (get-mouse-click ventana1))
     )
     (cond
          ((and (= (posn-x d)(- (posn-x c)50))(= (posn-y d)(- (posn-y c)50))(equal? (que_hay2? c)"peon.gif"))(jaque 7 d c r s v i 0))
          ((and (= (posn-x d)(- (posn-x c)50))(= (posn-y d)(- (posn-y c)50))(equal? (que_hay2? c)"torre.gif"))(jaque 7 d c r s v i 0))
          ((and (= (posn-x d)(- (posn-x c)50))(= (posn-y d)(- (posn-y c)50))(equal? (que_hay2? c)"caballo.gif"))(jaque 7 d c r s v i 0))
          ((and (= (posn-x d)(- (posn-x c)50))(= (posn-y d)(- (posn-y c)50))(equal? (que_hay2? c)"alfil.gif"))(jaque 7 d c r s v i 0))
          ((and (= (posn-x d)(- (posn-x c)50))(= (posn-y d)(- (posn-y c)50))(equal? (que_hay2? c)"reina.gif"))(jaque 7 d c r s v i 0))
          ((and (= (posn-x d)(+ (posn-x c)50))(= (posn-y d)(- (posn-y c)50))(equal? (que_hay2? c)"peon.gif"))(jaque 7 d c r s v i 0))
          ((and (= (posn-x d)(+ (posn-x c)50))(= (posn-y d)(- (posn-y c)50))(equal? (que_hay2? c)"torre.gif"))(jaque 7 d c r s v i 0))
          ((and (= (posn-x d)(+ (posn-x c)50))(= (posn-y d)(- (posn-y c)50))(equal? (que_hay2? c)"caballo.gif"))(jaque 7 d c r s v i 0))
          ((and (= (posn-x d)(+ (posn-x c)50))(= (posn-y d)(- (posn-y c)50))(equal? (que_hay2? c)"alfil.gif"))(jaque 7 d c r s v i 0))
          ((and (= (posn-x d)(+ (posn-x c)50))(= (posn-y d)(- (posn-y c)50))(equal? (que_hay2? c)"reina.gif"))(jaque 7 d c r s v i 0))
          ((and (= (posn-x d)(posn-x c))(= (posn-y d)(- (posn-y c)50))(equal? (que_hay2? c)"vacio.gif"))(jaque 7 d c r s v i 0))
          (else (coordenada3 0 0 0 (get-mouse-click ventana1)))
     )
  )
)
(define (se_puede_torre2  d c r s v i e)
  (if (equal? e c )
      (cond
        ((equal? (que_hay2? c) "vacio.gif")(jaque 8 d c r s v i 0)) 
        ((equal? (que_hay2? c) "peon.gif")(jaque 8 d c r s v i 0))
        ((equal? (que_hay2? c) "torre.gif")(jaque 8 d c r s v i 0))
        ((equal? (que_hay2? c) "reina.gif")(jaque 8 d c r s v i 0))
        ((equal? (que_hay2? c) "caballo.gif")(jaque 8 d c r s v i 0))
        ((equal? (que_hay2? c) "alfil.gif")(jaque 8 d c r s v i 0))
        (else (coordenada3 0 0 0 (get-mouse-click ventana1)))
      )
      (cond
        ((and (= (posn-x e)(posn-x c))(< (posn-y e)(-(posn-y c)50))(equal? (que_hay2? (convertir (posn-x e)(+(posn-y e)50)))"vacio.gif"))(se_puede_torre2 d c r s v i (convertir (posn-x e)(+(posn-y e)50))))
        ((and (= (posn-x e)(posn-x c))(= (posn-y e)(-(posn-y c)50)))(se_puede_torre2 d c r s v i (convertir (posn-x e)(+(posn-y e)50))))
        ((and (= (posn-x e)(posn-x c))(> (posn-y e)(+(posn-y c)50))(equal? (que_hay2? (convertir (posn-x e)(-(posn-y e)50)))"vacio.gif"))(se_puede_torre2 d c r s v i (convertir (posn-x e)(-(posn-y e)50))))
        ((and (= (posn-x e)(posn-x c))(= (posn-y e)(+(posn-y c)50)))(se_puede_torre2 d c r s v i (convertir (posn-x e)(-(posn-y e)50))))
        ((and (> (posn-x e)(+(posn-x c)50))(= (posn-y e)(posn-y c))(equal? (que_hay2? (convertir (-(posn-x e)50)(posn-y e)))"vacio.gif"))(se_puede_torre2 d c r s v i (convertir (-(posn-x e)50)(posn-y e))))
        ((and (= (posn-x e)(+(posn-x c)50))(= (posn-y e)(posn-y c)))(se_puede_torre2 d c r s v i (convertir (-(posn-x e)50)(posn-y e))))
        ((and (< (posn-x e)(-(posn-x c)50))(= (posn-y e)(posn-y c))(equal? (que_hay2? (convertir (+(posn-x e)50)(posn-y e)))"vacio.gif"))(se_puede_torre2 d c r s v i (convertir (+(posn-x e)50)(posn-y e)))) 
        ((and (= (posn-x e)(-(posn-x c)50))(= (posn-y e)(posn-y c)))(se_puede_torre2 d c r s v i (convertir (+(posn-x e)50)(posn-y e))))
        (else (coordenada3 0 0 0 (get-mouse-click ventana1)))
      )
   )
 )
(define (se_puede_caballo2 d c r s v i)
  (cond
     ((equal? (que_hay2? c) "vacio.gif")(jaque 9 d c r s v i 0)) 
     ((equal? (que_hay2? c) "peon.gif")(jaque 9 d c r s v i 0))
     ((equal? (que_hay2? c) "torre.gif")(jaque 9 d c r s v i 0))
     ((equal? (que_hay2? c) "reina.gif")(jaque 9 d c r s v i 0))
     ((equal? (que_hay2? c) "caballo.gif")(jaque 9 d c r s v i 0))
     ((equal? (que_hay2? c) "alfil.gif")(jaque 9 d c r s v i 0))
     (else (coordenada3 0 0 0 (get-mouse-click ventana1)))
  )
)
(define (se_puede_alfil2 d c r s v i e)
  (if (equal? e c)
      (begin
        (cond
        ((equal? (que_hay2? c) "vacio.gif")(jaque 10 d c r s v i 0)) 
        ((equal? (que_hay2? c) "peon.gif")(jaque 10 d c r s v i 0)) 
        ((equal? (que_hay2? c) "torre.gif")(jaque 10 d c r s v i 0))
        ((equal? (que_hay2? c) "reina.gif")(jaque 10 d c r s v i 0))
        ((equal? (que_hay2? c) "caballo.gif")(jaque 10 d c r s v i 0))
        ((equal? (que_hay2? c) "alfil.gif")(jaque 10 d c r s v i 0))
        (else (coordenada3 0 0 0 (get-mouse-click ventana1)))
        )
      )
   (cond
     ((and (< (posn-x e)(-(posn-x c)50))(< (posn-y e)(-(posn-y c)50))(equal? (que_hay2? (convertir (+(posn-x e)50)(+(posn-y e)50)))"vacio.gif"))(se_puede_alfil2 d c r s v i (convertir (+(posn-x e)50)(+(posn-y e)50))))
     ((and (= (posn-x e)(-(posn-x c)50))(= (posn-y e)(-(posn-y c)50)))(se_puede_alfil2 d c r s v i (convertir (+(posn-x e)50)(+(posn-y e)50))))
     ((and (> (posn-x e)(+(posn-x c)50))(> (posn-y e)(+(posn-y c)50))(equal? (que_hay2? (convertir (-(posn-x e)50)(-(posn-y e)50)))"vacio.gif"))(se_puede_alfil2 d c r s v i (convertir (-(posn-x e)50)(-(posn-y e)50))))
     ((and (= (posn-x e)(+(posn-x c)50))(= (posn-y e)(+(posn-y c)50)))(se_puede_alfil2 d c r s v i (convertir (-(posn-x e)50)(-(posn-y e)50))))
     ((and (> (posn-x e)(+(posn-x c)50))(< (posn-y e)(-(posn-y c)50))(equal? (que_hay2? (convertir (-(posn-x e)50)(+(posn-y e)50)))"vacio.gif"))(se_puede_alfil2 d c r s v i (convertir (-(posn-x e)50)(+(posn-y e)50))))
     ((and (= (posn-x e)(+(posn-x c)50))(= (posn-y e)(-(posn-y c)50)))(se_puede_alfil2 d c r s v i (convertir (-(posn-x e)50)(+(posn-y e)50))))
     ((and (< (posn-x e)(-(posn-x c)50))(> (posn-y e)(+(posn-y c)50))(equal? (que_hay2? (convertir (+(posn-x e)50)(-(posn-y e)50)))"vacio.gif"))(se_puede_alfil2 d c r s v i (convertir (+(posn-x e)50)(-(posn-y e)50)))) 
     ((and (= (posn-x e)(-(posn-x c)50))(= (posn-y e)(+(posn-y c)50)))(se_puede_alfil2 d c r s v i (convertir (+(posn-x e)50)(-(posn-y e)50))))
     (else (coordenada3 0 0 0 (get-mouse-click ventana1)))
   )
 )
)
(define (se_puede_reina2 d c r s v i e)
   (if (equal? e c)
      (begin
        (cond
        ((equal? (que_hay2? c) "vacio.gif")(jaque 11 d c r s v i 0)) 
        ((equal? (que_hay2? c) "peon.gif")(jaque 11 d c r s v i 0))
        ((equal? (que_hay2? c) "torre.gif")(jaque 11 d c r s v i 0))
        ((equal? (que_hay2? c) "reina.gif")(jaque 11 d c r s v i 0))
        ((equal? (que_hay2? c) "caballo.gif")(jaque 11 d c r s v i 0))
        ((equal? (que_hay2? c) "alfil.gif")(jaque 11 d c r s v i 0))
        (else (coordenada3 0 0 0 (get-mouse-click ventana1)))
        )
      )
   (cond
     ((and (< (posn-x e)(-(posn-x c)50))(< (posn-y e)(-(posn-y c)50))(equal? (que_hay2? (convertir (+(posn-x e)50)(+(posn-y e)50)))"vacio.gif"))(se_puede_reina2 d c r s v i (convertir (+(posn-x e)50)(+(posn-y e)50))))
     ((and (= (posn-x e)(-(posn-x c)50))(= (posn-y e)(-(posn-y c)50)))(se_puede_reina2 d c r s v i (convertir (+(posn-x e)50)(+(posn-y e)50))))
     ((and (> (posn-x e)(+(posn-x c)50))(> (posn-y e)(+(posn-y c)50))(equal? (que_hay2? (convertir (-(posn-x e)50)(-(posn-y e)50)))"vacio.gif"))(se_puede_reina2 d c r s v i (convertir (-(posn-x e)50)(-(posn-y e)50))))
     ((and (= (posn-x e)(+(posn-x c)50))(= (posn-y e)(+(posn-y c)50)))(se_puede_reina2 d c r s v i (convertir (-(posn-x e)50)(-(posn-y e)50))))
     ((and (> (posn-x e)(+(posn-x c)50))(< (posn-y e)(-(posn-y c)50))(equal? (que_hay2? (convertir (-(posn-x e)50)(+(posn-y e)50)))"vacio.gif"))(se_puede_reina2 d c r s v i (convertir (-(posn-x e)50)(+(posn-y e)50))))
     ((and (= (posn-x e)(+(posn-x c)50))(= (posn-y e)(-(posn-y c)50)))(se_puede_reina2 d c r s v i (convertir (-(posn-x e)50)(+(posn-y e)50))))
     ((and (< (posn-x e)(-(posn-x c)50))(> (posn-y e)(+(posn-y c)50))(equal? (que_hay2? (convertir (+(posn-x e)50)(-(posn-y e)50)))"vacio.gif"))(se_puede_reina2 d c r s v i (convertir (+(posn-x e)50)(-(posn-y e)50)))) 
     ((and (= (posn-x e)(-(posn-x c)50))(= (posn-y e)(+(posn-y c)50)))(se_puede_reina2 d c r s v i (convertir (+(posn-x e)50)(-(posn-y e)50))))
     ((and (= (posn-x e)(posn-x c))(< (posn-y e)(-(posn-y c)50))(equal? (que_hay2? (convertir (posn-x e)(+(posn-y e)50)))"vacio.gif"))(se_puede_reina2 d c r s v i (convertir (posn-x e)(+(posn-y e)50))))
     ((and (= (posn-x e)(posn-x c))(= (posn-y e)(-(posn-y c)50)))(se_puede_reina2 d c r s v i (convertir (posn-x e)(+(posn-y e)50))))
     ((and (= (posn-x e)(posn-x c))(> (posn-y e)(+(posn-y c)50))(equal? (que_hay2? (convertir (posn-x e)(-(posn-y e)50)))"vacio.gif"))(se_puede_reina2 d c r s v i (convertir (posn-x e)(-(posn-y e)50))))
     ((and (= (posn-x e)(posn-x c))(= (posn-y e)(+(posn-y c)50)))(se_puede_reina2 d c r s v i (convertir (posn-x e)(-(posn-y e)50))))
     ((and (> (posn-x e)(+(posn-x c)50))(= (posn-y e)(posn-y c))(equal? (que_hay2? (convertir (-(posn-x e)50)(posn-y e)))"vacio.gif"))(se_puede_reina2 d c r s v i (convertir (-(posn-x e)50)(posn-y e))))
     ((and (= (posn-x e)(+(posn-x c)50))(= (posn-y e)(posn-y c)))(se_puede_reina2 d c r s v i (convertir (-(posn-x e)50)(posn-y e))))
     ((and (< (posn-x e)(-(posn-x c)50))(= (posn-y e)(posn-y c))(equal? (que_hay2? (convertir (+(posn-x e)50)(posn-y e)))"vacio.gif"))(se_puede_reina2 d c r s v i (convertir (+(posn-x e)50)(posn-y e)))) 
     ((and (= (posn-x e)(-(posn-x c)50))(= (posn-y e)(posn-y c)))(se_puede_reina2 d c r s v i (convertir (+(posn-x e)50)(posn-y e))))
     (else (coordenada3 0 0 0 (get-mouse-click ventana1)))
    )
   )
 )
(define (se_puede_rey2 d c r s v i e)
 (if (or (and (equal? d e8)(equal? c h8))(and (equal? d e8)(equal? c a8)))
     (if (equal? (que_hay2? c) "torre2.gif")
     (cond
     ((and (< (posn-x e)(-(posn-x c)50))(= (posn-y e)(posn-y c))(equal? (que_hay2? (convertir (+(posn-x e)50)(posn-y e)))"vacio.gif"))(se_puede_rey2 d c r s v i (convertir (+(posn-x e)50)(posn-y e)))) 
     ((and (= (posn-x e)(-(posn-x c)50))(= (posn-y e)(posn-y c)))(ejecutar12 d c r s v i 1))
     ((and (> (posn-x e)(+(posn-x c)50))(= (posn-y e)(posn-y c))(equal? (que_hay2? (convertir (-(posn-x e)50)(posn-y e)))"vacio.gif"))(se_puede_rey2 d c r s v i (convertir (-(posn-x e)50)(posn-y e)))) 
     ((and (= (posn-x e)(+(posn-x c)50))(= (posn-y e)(posn-y c)))(ejecutar12 d c r s v i 2))
     (else (coordenada3 0 0 0 (get-mouse-click ventana1)))
     )
     (cond
        ((equal? (que_hay2? c) "vacio.gif")(jaque 12 d c r s v i 0)) 
        ((equal? (que_hay2? c) "peon.gif")(jaque 12 d c r s v i 0))
        ((equal? (que_hay2? c) "torre.gif")(jaque 12 d c r s v i 0))
        ((equal? (que_hay2? c) "reina.gif")(jaque 12 d c r s v i 0))
        ((equal? (que_hay2? c) "caballo.gif")(jaque 12 d c r s v i 0))
        ((equal? (que_hay2? c) "alfil.gif")(jaque 12 d c r s v i 0))
        (else (coordenada3 0 0 0 (get-mouse-click ventana1)))
   )
 )
  (cond
        ((equal? (que_hay2? c) "vacio.gif")(jaque 12 d c r s v i 0)) 
        ((equal? (que_hay2? c) "peon.gif")(jaque 12 d c r s v i 0))
        ((equal? (que_hay2? c) "torre.gif")(jaque 12 d c r s v i 0))
        ((equal? (que_hay2? c) "reina.gif")(jaque 12 d c r s v i 0))
        ((equal? (que_hay2? c) "caballo.gif")(jaque 12 d c r s v i 0))
        ((equal? (que_hay2? c) "alfil.gif")(jaque 12 d c r s v i 0))
        (else (coordenada3 0 0 0 (get-mouse-click ventana1)))
   )
 )
)

;************************************************
; Regula el movimiento de las fichas segun sean *____________________________________________________________________________
;************************************************

(define (filtro  f d c r s v i)
  (cond
    ((= f 1)(se_puede_peon d c r s v i d))
    ((= f 2)(se_puede_torre d c r s v i d))
    ((= f 3)(se_puede_caballo d c r s v i))
    ((= f 4)(se_puede_alfil d c r s v i d))
    ((= f 5)(se_puede_reina d c r s v i d))
    ((= f 6)(se_puede_rey d c r s v i d))
    ((= f 7)(se_puede_peon2 d c r s v i d))
    ((= f 8)(se_puede_torre2 d c r s v i d))
    ((= f 9)(se_puede_caballo2 d c r s v i))
    ((= f 10)(se_puede_alfil2 d c r s v i d))
    ((= f 11)(se_puede_reina2 d c r s v i d))
    ((= f 12)(se_puede_rey2 d c r s v i d))
    (else (coordenada 0 0 0 (get-mouse-click ventana1)))
  )
)
;***********************************************************************************
; Funcion  que ejecuta los movimientos de las fichas del juego una para cada ficha *__________________________________________________
;***********************************************************************************

(define (ejecutar d c r s v i)
          (if (= (posn-y c) 50)
                  (jaque 5 d c r s v i 0)  
               (begin
                        (vector-set! (vector-ref vectors v) i "peon.gif")
                        (vector-set! (vector-ref vectors r) s "vacio.gif")
                        (borrar c)
                        (dibujar c)
                        (borrar d) 
                        (coordenada3 0 0 0 (get-mouse-click ventana1))
               )
          )
 )
(define (ejecutar2 d c r s v i)
          (begin        (vector-set! (vector-ref vectors v) i "torre.gif")
                        (vector-set! (vector-ref vectors r) s "vacio.gif")
                        (borrar c)
                        (dibujar c)
                        (borrar d) 
                        (coordenada3 0 0 0 (get-mouse-click ventana1))
          )
)
(define (ejecutar3 d c r s v i)
  (begin       (vector-set! (vector-ref vectors v) i "caballo.gif")
               (vector-set! (vector-ref vectors r) s "vacio.gif")
               (borrar c)
               (dibujar c)
               (borrar d) 
               (coordenada3 0 0 0 (get-mouse-click ventana1))
   )
)
(define (ejecutar4 d c r s v i)
  (begin       (vector-set! (vector-ref vectors v) i "alfil.gif")
               (vector-set! (vector-ref vectors r) s "vacio.gif")
               (borrar c)
               (dibujar c)
               (borrar d) 
               (coordenada3 0 0 0 (get-mouse-click ventana1))
   )
)
(define (ejecutar5 d c r s v i)
  (begin       (vector-set! (vector-ref vectors v) i "reina.gif")
               (vector-set! (vector-ref vectors r) s "vacio.gif")
               (borrar c)
               (dibujar c)
               (borrar d) 
               (coordenada3 0 0 0 (get-mouse-click ventana1))
   )
)
(define (ejecutar6 d c r s v i z)
  (if (= z 0)
  (begin       (vector-set! (vector-ref vectors v) i "rey.gif")
               (vector-set! (vector-ref vectors r) s "vacio.gif")
               (borrar c)
               (dibujar c)
               (borrar d) 
               (coordenada3 0 0 0 (get-mouse-click ventana1))
   )
(if (= z 1)
  (begin
   (vector-set! (vector-ref vectors 0) 6 "rey.gif")
   (vector-set! (vector-ref vectors 0) 5 "torre.gif")
   (vector-set! (vector-ref vectors 0)4 "vacio.gif")
   (vector-set! (vector-ref vectors 0)7 "vacio.gif")
   (borrar d)
   (borrar c)
   (dibujar g1)
   (dibujar f1)
   (coordenada3 0 0 0 (get-mouse-click ventana1))
  )
  (if (= z 2)
     (begin
         (vector-set! (vector-ref vectors 0) 2 "rey.gif")
         (vector-set! (vector-ref vectors 0) 3 "torre.gif")
         (vector-set! (vector-ref vectors 0) 4 "vacio.gif")
         (vector-set! (vector-ref vectors 0) 0 "vacio.gif")
         (borrar d)
         (borrar c)
         (dibujar c1)
         (dibujar d1)
         (coordenada3 0 0 0 (get-mouse-click ventana1))
      )    
    (coordenada 0 0 0 (get-mouse-click ventana1))
   )
 )
)
)
(define (ejecutar7 d c r s v i)
          (if (= (posn-y c) 400)
               (jaque 11 d c r s v i 0)
               (begin
                        (vector-set! (vector-ref vectors v) i "peon2.gif")
                        (vector-set! (vector-ref vectors r) s "vacio.gif")
                        (borrar c)
                        (dibujar c)
                        (borrar d) 
                        (coordenada 0 0 0 (get-mouse-click ventana1))
               )
          )
 )
(define (ejecutar8 d c r s v i)
          (begin        (vector-set! (vector-ref vectors v) i "torre2.gif")
                        (vector-set! (vector-ref vectors r) s "vacio.gif")
                        (borrar c)
                        (dibujar c)
                        (borrar d) 
                        (coordenada 0 0 0 (get-mouse-click ventana1))
          )
)
(define (ejecutar9 d c r s v i)
  (begin       (vector-set! (vector-ref vectors v) i "caballo2.gif")
               (vector-set! (vector-ref vectors r) s "vacio.gif")
               (borrar c)
               (dibujar c)
               (borrar d) 
               (coordenada 0 0 0 (get-mouse-click ventana1))
   )
)
(define (ejecutar10 d c r s v i)
  (begin       (vector-set! (vector-ref vectors v) i "alfil2.gif")
               (vector-set! (vector-ref vectors r) s "vacio.gif")
               (borrar c)
               (dibujar c)
               (borrar d) 
               (coordenada 0 0 0 (get-mouse-click ventana1))
   )
)
(define (ejecutar11 d c r s v i)
  (begin       (vector-set! (vector-ref vectors v) i "reina2.gif")
               (vector-set! (vector-ref vectors r) s "vacio.gif")
               (borrar c)
               (dibujar c)
               (borrar d) 
               (coordenada 0 0 0 (get-mouse-click ventana1))
   )
)
(define (ejecutar12 d c r s v i z)
  (if (= z 0)
  (begin       (vector-set! (vector-ref vectors v) i "rey2.gif")
               (vector-set! (vector-ref vectors r) s "vacio.gif")
               (borrar c)
               (dibujar c)
               (borrar d) 
               (coordenada 0 0 0 (get-mouse-click ventana1))
   )
  (if (= z 1)
  (begin
   (vector-set! (vector-ref vectors 7) 6 "rey2.gif")
   (vector-set! (vector-ref vectors 7) 5 "torre2.gif")
   (vector-set! (vector-ref vectors 7) 4 "vacio.gif")
   (vector-set! (vector-ref vectors 7) 7 "vacio.gif")
   (borrar d)
   (borrar c)
   (dibujar g8)
   (dibujar f8)
   (coordenada 0 0 0 (get-mouse-click ventana1))
  )
  (if (= z 2)
     (begin
         (vector-set! (vector-ref vectors 7) 2 "rey2.gif")
         (vector-set! (vector-ref vectors 7) 3 "torre2.gif")
         (vector-set! (vector-ref vectors 7) 4 "vacio.gif")
         (vector-set! (vector-ref vectors 7) 0 "vacio.gif")
         (borrar d)
         (borrar c)
         (dibujar c8)
         (dibujar d8)
         (coordenada 0 0 0 (get-mouse-click ventana1))
      )    
    (coordenada3 0 0 0 (get-mouse-click ventana1))
   )
 )
)
)
 


;*************************************
; Rectifica movimiento de las fichas *____________________________________________________________________________________________________________
;*************************************

(define (movimiento_peon f d c r s v i z)
 (if (= z 0)
   (compilar? f d c 0 0 0 0 0)
   (cond
     ((and (= (posn-x d)(- (posn-x c)50))(= (posn-y d)(+ (posn-y c)50)))(filtro f d c r s v i))
     ((and (= (posn-x d)(+ (posn-x c)50))(= (posn-y d)(+ (posn-y c)50)))(filtro f d c r s v i))
     ((and (= (posn-x c)(posn-x d))(= (posn-y c)(- (posn-y d) 50)))(filtro f d c r s v i))
     ((or (equal? c a4)(equal? c b4)(equal? c c4)(equal? c d4)(equal? c e4)(equal? c f4)(equal? c g4)(equal? c h4))
        (if(and (= (posn-x c)(posn-x d))(= (posn-y c)(- (posn-y d) 100)))
           (filtro f d c r s v i)
           (coordenada 0 0 0 (get-mouse-click ventana1))
        )
     )
     (else (coordenada 0 0 0 (get-mouse-click ventana1)))
    )
  )
)
(define (movimiento_peon2 f d c r s v i z) 
 (if (= z 0)
   (compilar? f d c 0 0 0 0 0)
   (cond
     ((and (= (posn-x d)(- (posn-x c)50))(= (posn-y d)(- (posn-y c)50)))(filtro f d c r s v i))
     ((and (= (posn-x d)(+ (posn-x c)50))(= (posn-y d)(- (posn-y c)50)))(filtro f d c r s v i))
     ((and (= (posn-x c)(posn-x d))(= (posn-y c)(+ (posn-y d) 50)))(filtro f d c r s v i))
     ((or (equal? c a5)(equal? c b5)(equal? c c5)(equal? c d5)(equal? c e5)(equal? c f5)(equal? c g5)(equal? c h5))
        (if(and (= (posn-x c)(posn-x d))(= (posn-y c)(+ (posn-y d) 100)))
           (filtro f d c r s v i)
           (coordenada3 0 0 0 (get-mouse-click ventana1))
        )
     )
     (else (coordenada3 0 0 0 (get-mouse-click ventana1)))
    )
  )
)


(define (movimiento_torre f d c r s v i z)
      (if (= z 0)
           (compilar? f d c 0 0 0 0 0)

          (cond
          ((and (= (posn-x c)(posn-x d))(= (posn-y c)(- (posn-y d) 50)))(filtro f d c r s v i ))
          ((and (= (posn-x c)(posn-x d))(= (posn-y c)(- (posn-y d) 100)))(filtro f d c r s v i ))
          ((and (= (posn-x c)(posn-x d))(= (posn-y c)(- (posn-y d) 150)))(filtro f d c r s v i ))
          ((and (= (posn-x c)(posn-x d))(= (posn-y c)(- (posn-y d) 200)))(filtro f d c r s v i ))
          ((and (= (posn-x c)(posn-x d))(= (posn-y c)(- (posn-y d) 250)))(filtro f d c r s v i ))
          ((and (= (posn-x c)(posn-x d))(= (posn-y c)(- (posn-y d) 300)))(filtro f d c r s v i ))
          ((and (= (posn-x c)(posn-x d))(= (posn-y c)(- (posn-y d) 350)))(filtro f d c r s v i ))
          ((and (= (posn-x c)(posn-x d))(= (posn-y c)(+ (posn-y d) 50)))(filtro f d c r s v i ))
          ((and (= (posn-x c)(posn-x d))(= (posn-y c)(+ (posn-y d) 100)))(filtro f d c r s v i ))
          ((and (= (posn-x c)(posn-x d))(= (posn-y c)(+ (posn-y d) 150)))(filtro f d c r s v i ))
          ((and (= (posn-x c)(posn-x d))(= (posn-y c)(+ (posn-y d) 200)))(filtro f d c r s v i ))
          ((and (= (posn-x c)(posn-x d))(= (posn-y c)(+ (posn-y d) 250)))(filtro f d c r s v i ))
          ((and (= (posn-x c)(posn-x d))(= (posn-y c)(+ (posn-y d) 300)))(filtro f d c r s v i ))
          ((and (= (posn-x c)(posn-x d))(= (posn-y c)(+ (posn-y d) 350)))(filtro f d c r s v i ))         
          ((and (= (posn-x c)(- (posn-x d) 50))(= (posn-y c)(posn-y d)))(filtro f d c r s v i ))
          ((and (= (posn-x c)(- (posn-x d) 100))(= (posn-y c)(posn-y d)))(filtro f d c r s v i ))
          ((and (= (posn-x c)(- (posn-x d) 150))(= (posn-y c)(posn-y d)))(filtro f d c r s v i ))
          ((and (= (posn-x c)(- (posn-x d) 200))(= (posn-y c)(posn-y d)))(filtro f d c r s v i ))
          ((and (= (posn-x c)(- (posn-x d) 250))(= (posn-y c)(posn-y d)))(filtro f d c r s v i ))
          ((and (= (posn-x c)(- (posn-x d) 300))(= (posn-y c)(posn-y d)))(filtro f d c r s v i ))
          ((and (= (posn-x c)(- (posn-x d) 350))(= (posn-y c)(posn-y d)))(filtro f d c r s v i ))
          ((and (= (posn-x c)(+ (posn-x d) 50))(= (posn-y c)(posn-y d)))(filtro f d c r s v i ))
          ((and (= (posn-x c)(+ (posn-x d) 100))(= (posn-y c)(posn-y d)))(filtro f d c r s v i ))
          ((and (= (posn-x c)(+ (posn-x d) 150))(= (posn-y c)(posn-y d)))(filtro f d c r s v i ))
          ((and (= (posn-x c)(+ (posn-x d) 200))(= (posn-y c)(posn-y d)))(filtro f d c r s v i ))
          ((and (= (posn-x c)(+ (posn-x d) 250))(= (posn-y c)(posn-y d)))(filtro f d c r s v i ))
          ((and (= (posn-x c)(+ (posn-x d) 300))(= (posn-y c)(posn-y d)))(filtro f d c r s v i ))
          ((and (= (posn-x c)(+ (posn-x d) 350))(= (posn-y c)(posn-y d)))(filtro f d c r s v i ))
          (else (if (and (<= f 6)(>= f 1))
                  (coordenada 0 0 0 (get-mouse-click ventana1))
                  (coordenada3 0 0 0 (get-mouse-click ventana1))              
                )
          )
       )
    )
)
(define (movimiento_caballo f d c r s v i z)
  (if (= z 0) 
      (compilar? f d c 0 0 0 0 0)
      (cond
      ((and (= (posn-x d)(-(posn-x c)50))(= (posn-y d)(-(posn-y c)100)))(filtro f d c r s v i))
      ((and (= (posn-x d)(+(posn-x c)50))(= (posn-y d)(-(posn-y c)100)))(filtro f d c r s v i))
      ((and (= (posn-x d)(-(posn-x c)50))(= (posn-y d)(+(posn-y c)100)))(filtro f d c r s v i))
      ((and (= (posn-x d)(+(posn-x c)50))(= (posn-y d)(+(posn-y c)100)))(filtro f d c r s v i))
      ((and (= (posn-x d)(-(posn-x c)100))(= (posn-y d)(-(posn-y c)50)))(filtro f d c r s v i))
      ((and (= (posn-x d)(+(posn-x c)100))(= (posn-y d)(-(posn-y c)50)))(filtro f d c r s v i))
      ((and (= (posn-x d)(-(posn-x c)100))(= (posn-y d)(+(posn-y c)50)))(filtro f d c r s v i))
      ((and (= (posn-x d)(+(posn-x c)100))(= (posn-y d)(+(posn-y c)50)))(filtro f d c r s v i))
      (else (if (and (<= f 6)(>= f 1))
              (coordenada 0 0 0 (get-mouse-click ventana1))
              (coordenada3 0 0 0 (get-mouse-click ventana1))              
            )
      )
      )
 )
)
(define (movimiento_alfil f d c r s v i z)
  (if (= z 0)
      (compilar? f d c 0 0 0 0 0)
      (cond
      ((and (= (posn-x d)(-(posn-x c)50))(= (posn-y d)(-(posn-y c)50)))(filtro f d c r s v i))
      ((and (= (posn-x d)(-(posn-x c)100))(= (posn-y d)(-(posn-y c)100)))(filtro f d c r s v i))
      ((and (= (posn-x d)(-(posn-x c)150))(= (posn-y d)(-(posn-y c)150)))(filtro f d c r s v i))
      ((and (= (posn-x d)(-(posn-x c)200))(= (posn-y d)(-(posn-y c)200)))(filtro f d c r s v i))
      ((and (= (posn-x d)(-(posn-x c)250))(= (posn-y d)(-(posn-y c)250)))(filtro f d c r s v i))
      ((and (= (posn-x d)(-(posn-x c)300))(= (posn-y d)(-(posn-y c)300)))(filtro f d c r s v i))
      ((and (= (posn-x d)(-(posn-x c)350))(= (posn-y d)(-(posn-y c)350)))(filtro f d c r s v i))
      ((and (= (posn-x d)(+(posn-x c)50))(= (posn-y d)(+(posn-y c)50)))(filtro f d c r s v i))
      ((and (= (posn-x d)(+(posn-x c)100))(= (posn-y d)(+(posn-y c)100)))(filtro f d c r s v i))
      ((and (= (posn-x d)(+(posn-x c)150))(= (posn-y d)(+(posn-y c)150)))(filtro f d c r s v i))
      ((and (= (posn-x d)(+(posn-x c)200))(= (posn-y d)(+(posn-y c)200)))(filtro f d c r s v i))
      ((and (= (posn-x d)(+(posn-x c)250))(= (posn-y d)(+(posn-y c)250)))(filtro f d c r s v i))
      ((and (= (posn-x d)(+(posn-x c)300))(= (posn-y d)(+(posn-y c)300)))(filtro f d c r s v i))
      ((and (= (posn-x d)(+(posn-x c)350))(= (posn-y d)(+(posn-y c)350)))(filtro f d c r s v i))
      ((and (= (posn-x d)(+(posn-x c)50))(= (posn-y d)(-(posn-y c)50)))(filtro f d c r s v i))
      ((and (= (posn-x d)(+(posn-x c)100))(= (posn-y d)(-(posn-y c)100)))(filtro f d c r s v i))
      ((and (= (posn-x d)(+(posn-x c)150))(= (posn-y d)(-(posn-y c)150)))(filtro f d c r s v i))
      ((and (= (posn-x d)(+(posn-x c)200))(= (posn-y d)(-(posn-y c)200)))(filtro f d c r s v i))
      ((and (= (posn-x d)(+(posn-x c)250))(= (posn-y d)(-(posn-y c)250)))(filtro f d c r s v i))
      ((and (= (posn-x d)(+(posn-x c)300))(= (posn-y d)(-(posn-y c)300)))(filtro f d c r s v i))
      ((and (= (posn-x d)(+(posn-x c)350))(= (posn-y d)(-(posn-y c)350)))(filtro f d c r s v i))
      ((and (= (posn-x d)(-(posn-x c)50))(= (posn-y d)(+(posn-y c)50)))(filtro f d c r s v i))
      ((and (= (posn-x d)(-(posn-x c)100))(= (posn-y d)(+(posn-y c)100)))(filtro f d c r s v i))
      ((and (= (posn-x d)(-(posn-x c)150))(= (posn-y d)(+(posn-y c)150)))(filtro f d c r s v i))
      ((and (= (posn-x d)(-(posn-x c)200))(= (posn-y d)(+(posn-y c)200)))(filtro f d c r s v i))
      ((and (= (posn-x d)(-(posn-x c)250))(= (posn-y d)(+(posn-y c)250)))(filtro f d c r s v i))
      ((and (= (posn-x d)(-(posn-x c)300))(= (posn-y d)(+(posn-y c)300)))(filtro f d c r s v i))
      ((and (= (posn-x d)(-(posn-x c)350))(= (posn-y d)(+(posn-y c)350)))(filtro f d c r s v i)) 
      (else (if (and (<= f 6)(>= f 1))
              (coordenada 0 0 0 (get-mouse-click ventana1))
              (coordenada3 0 0 0 (get-mouse-click ventana1))              
             )
       )
    )
  )
)
(define (movimiento_reina f d c r s v i z)
  (if (= z 0)
      (compilar? f d c 0 0 0 0 0)
      (cond
      ((and (= (posn-x d)(-(posn-x c)50))(= (posn-y d)(-(posn-y c)50)))(filtro f d c r s v i))
      ((and (= (posn-x d)(-(posn-x c)100))(= (posn-y d)(-(posn-y c)100)))(filtro f d c r s v i))
      ((and (= (posn-x d)(-(posn-x c)150))(= (posn-y d)(-(posn-y c)150)))(filtro f d c r s v i))
      ((and (= (posn-x d)(-(posn-x c)200))(= (posn-y d)(-(posn-y c)200)))(filtro f d c r s v i))
      ((and (= (posn-x d)(-(posn-x c)250))(= (posn-y d)(-(posn-y c)250)))(filtro f d c r s v i))
      ((and (= (posn-x d)(-(posn-x c)300))(= (posn-y d)(-(posn-y c)300)))(filtro f d c r s v i))
      ((and (= (posn-x d)(-(posn-x c)350))(= (posn-y d)(-(posn-y c)350)))(filtro f d c r s v i))
      ((and (= (posn-x d)(+(posn-x c)50))(= (posn-y d)(+(posn-y c)50)))(filtro f d c r s v i))
      ((and (= (posn-x d)(+(posn-x c)100))(= (posn-y d)(+(posn-y c)100)))(filtro f d c r s v i))
      ((and (= (posn-x d)(+(posn-x c)150))(= (posn-y d)(+(posn-y c)150)))(filtro f d c r s v i))
      ((and (= (posn-x d)(+(posn-x c)200))(= (posn-y d)(+(posn-y c)200)))(filtro f d c r s v i))
      ((and (= (posn-x d)(+(posn-x c)250))(= (posn-y d)(+(posn-y c)250)))(filtro f d c r s v i))
      ((and (= (posn-x d)(+(posn-x c)300))(= (posn-y d)(+(posn-y c)300)))(filtro f d c r s v i))
      ((and (= (posn-x d)(+(posn-x c)350))(= (posn-y d)(+(posn-y c)350)))(filtro f d c r s v i))
      ((and (= (posn-x d)(+(posn-x c)50))(= (posn-y d)(-(posn-y c)50)))(filtro f d c r s v i))
      ((and (= (posn-x d)(+(posn-x c)100))(= (posn-y d)(-(posn-y c)100)))(filtro f d c r s v i))
      ((and (= (posn-x d)(+(posn-x c)150))(= (posn-y d)(-(posn-y c)150)))(filtro f d c r s v i))
      ((and (= (posn-x d)(+(posn-x c)200))(= (posn-y d)(-(posn-y c)200)))(filtro f d c r s v i))
      ((and (= (posn-x d)(+(posn-x c)250))(= (posn-y d)(-(posn-y c)250)))(filtro f d c r s v i))
      ((and (= (posn-x d)(+(posn-x c)300))(= (posn-y d)(-(posn-y c)300)))(filtro f d c r s v i))
      ((and (= (posn-x d)(+(posn-x c)350))(= (posn-y d)(-(posn-y c)350)))(filtro f d c r s v i))
      ((and (= (posn-x d)(-(posn-x c)50))(= (posn-y d)(+(posn-y c)50)))(filtro f d c r s v i))
      ((and (= (posn-x d)(-(posn-x c)100))(= (posn-y d)(+(posn-y c)100)))(filtro f d c r s v i))
      ((and (= (posn-x d)(-(posn-x c)150))(= (posn-y d)(+(posn-y c)150)))(filtro f d c r s v i))
      ((and (= (posn-x d)(-(posn-x c)200))(= (posn-y d)(+(posn-y c)200)))(filtro f d c r s v i))
      ((and (= (posn-x d)(-(posn-x c)250))(= (posn-y d)(+(posn-y c)250)))(filtro f d c r s v i))
      ((and (= (posn-x d)(-(posn-x c)300))(= (posn-y d)(+(posn-y c)300)))(filtro f d c r s v i))
      ((and (= (posn-x d)(-(posn-x c)350))(= (posn-y d)(+(posn-y c)350)))(filtro f d c r s v i)) 
      ((and (= (posn-x c)(posn-x d))(= (posn-y c)(- (posn-y d) 50)))(filtro f d c r s v i ))
      ((and (= (posn-x c)(posn-x d))(= (posn-y c)(- (posn-y d) 100)))(filtro f d c r s v i ))
      ((and (= (posn-x c)(posn-x d))(= (posn-y c)(- (posn-y d) 150)))(filtro f d c r s v i ))
      ((and (= (posn-x c)(posn-x d))(= (posn-y c)(- (posn-y d) 200)))(filtro f d c r s v i ))
      ((and (= (posn-x c)(posn-x d))(= (posn-y c)(- (posn-y d) 250)))(filtro f d c r s v i ))
      ((and (= (posn-x c)(posn-x d))(= (posn-y c)(- (posn-y d) 300)))(filtro f d c r s v i ))
      ((and (= (posn-x c)(posn-x d))(= (posn-y c)(- (posn-y d) 350)))(filtro f d c r s v i ))
      ((and (= (posn-x c)(posn-x d))(= (posn-y c)(+ (posn-y d) 50)))(filtro f d c r s v i ))
      ((and (= (posn-x c)(posn-x d))(= (posn-y c)(+ (posn-y d) 100)))(filtro f d c r s v i ))
      ((and (= (posn-x c)(posn-x d))(= (posn-y c)(+ (posn-y d) 150)))(filtro f d c r s v i ))
      ((and (= (posn-x c)(posn-x d))(= (posn-y c)(+ (posn-y d) 200)))(filtro f d c r s v i ))
      ((and (= (posn-x c)(posn-x d))(= (posn-y c)(+ (posn-y d) 250)))(filtro f d c r s v i ))
      ((and (= (posn-x c)(posn-x d))(= (posn-y c)(+ (posn-y d) 300)))(filtro f d c r s v i ))
      ((and (= (posn-x c)(posn-x d))(= (posn-y c)(+ (posn-y d) 350)))(filtro f d c r s v i ))         
      ((and (= (posn-x c)(- (posn-x d) 50))(= (posn-y c)(posn-y d)))(filtro f d c r s v i ))
      ((and (= (posn-x c)(- (posn-x d) 100))(= (posn-y c)(posn-y d)))(filtro f d c r s v i ))
      ((and (= (posn-x c)(- (posn-x d) 150))(= (posn-y c)(posn-y d)))(filtro f d c r s v i ))
      ((and (= (posn-x c)(- (posn-x d) 200))(= (posn-y c)(posn-y d)))(filtro f d c r s v i ))
      ((and (= (posn-x c)(- (posn-x d) 250))(= (posn-y c)(posn-y d)))(filtro f d c r s v i ))
      ((and (= (posn-x c)(- (posn-x d) 300))(= (posn-y c)(posn-y d)))(filtro f d c r s v i ))
      ((and (= (posn-x c)(- (posn-x d) 350))(= (posn-y c)(posn-y d)))(filtro f d c r s v i ))
      ((and (= (posn-x c)(+ (posn-x d) 50))(= (posn-y c)(posn-y d)))(filtro f d c r s v i ))
      ((and (= (posn-x c)(+ (posn-x d) 100))(= (posn-y c)(posn-y d)))(filtro f d c r s v i ))
      ((and (= (posn-x c)(+ (posn-x d) 150))(= (posn-y c)(posn-y d)))(filtro f d c r s v i ))
      ((and (= (posn-x c)(+ (posn-x d) 200))(= (posn-y c)(posn-y d)))(filtro f d c r s v i ))
      ((and (= (posn-x c)(+ (posn-x d) 250))(= (posn-y c)(posn-y d)))(filtro f d c r s v i ))
      ((and (= (posn-x c)(+ (posn-x d) 300))(= (posn-y c)(posn-y d)))(filtro f d c r s v i ))
      ((and (= (posn-x c)(+ (posn-x d) 350))(= (posn-y c)(posn-y d)))(filtro f d c r s v i ))
      (else (if (and (<= f 6)(>= f 1))
              (coordenada 0 0 0 (get-mouse-click ventana1))
              (coordenada3 0 0 0 (get-mouse-click ventana1))              
            )
      )
     )
  )
)
(define (movimiento_rey f d c r s v i z)
  (if (= z 0)
      (compilar? f d c 0 0 0 0 0)
      (cond
        ((and (= (posn-x d)(-(posn-x c)50))(= (posn-y d)(-(posn-y c)50)))(filtro f d c r s v i))
        ((and (= (posn-x d)(+(posn-x c)50))(= (posn-y d)(+(posn-y c)50)))(filtro f d c r s v i))
        ((and (= (posn-x d)(+(posn-x c)50))(= (posn-y d)(-(posn-y c)50)))(filtro f d c r s v i))
        ((and (= (posn-x d)(-(posn-x c)50))(= (posn-y d)(+(posn-y c)50)))(filtro f d c r s v i))
        ((and (= (posn-x c)(+ (posn-x d) 50))(= (posn-y c)(posn-y d)))(filtro f d c r s v i ))
        ((and (= (posn-x c)(- (posn-x d) 50))(= (posn-y c)(posn-y d)))(filtro f d c r s v i ))
        ((and (= (posn-x c)(posn-x d))(= (posn-y c)(+ (posn-y d) 50)))(filtro f d c r s v i ))
        ((and (= (posn-x c)(posn-x d))(= (posn-y c)(- (posn-y d) 50)))(filtro f d c r s v i ))
        ((equal? c h1)(filtro f d c r s v i))
        ((equal? c h8)(filtro f d c r s v i))
        ((equal? c a1)(filtro f d c r s v i))
        ((equal? c a8)(filtro f d c r s v i))
        (else (if (and (<= f 6)(>= f 1))
               (coordenada 0 0 0 (get-mouse-click ventana1))
               (coordenada3 0 0 0 (get-mouse-click ventana1))              
              )
        )
      )
  )
)
(define (que_es f d c r s v i z) 
  (cond
    ((= f 1)(movimiento_peon f d c r s v i z)) 
    ((= f 2)(movimiento_torre f d c r s v i z))
    ((= f 3)(movimiento_caballo f d c r s v i z))
    ((= f 4)(movimiento_alfil f d c r s v i z))
    ((= f 5)(movimiento_reina f d c r s v i z))
    ((= f 6)(movimiento_rey f d c r s v i z))
    ((= f 7)(movimiento_peon2 f d c r s v i z))
    ((= f 8)(movimiento_torre f d c r s v i z))
    ((= f 9)(movimiento_caballo f d c r s v i z))
    ((= f 10)(movimiento_alfil f d c r s v i z))
    ((= f 11)(movimiento_reina f d c r s v i z))
    ((= f 12)(movimiento_rey f d c r s v i z))
    (else (if (and (<= f 6)(>= f 1))
              (coordenada 0 0 0 (get-mouse-click ventana1))
              (coordenada3 0 0 0 (get-mouse-click ventana1))              
          )
    )
  )
)

;*********************************************************************
; ayuda a definir la las posiciones dadas por el usuario para llamar *
; la funcion que define el movimiento de la misma                    *
;*********************************************************************

(define (click f d )
 (coordenada2 f 0 0 0 d (get-mouse-click ventana1))
)
(define (click2 f d c)
  (if (>= f 1)
          (que_es f d c 0 0 0 0 0)
          (coordenada 0 0 0 (get-mouse-click ventana1))           
  )
)
(define (click3 f d )
 (coordenada4 f 0 0 0 d (get-mouse-click ventana1))
)
(define (click4 f d c)
  (if (>= f 7)
          (que_es f d c 0 0 0 0 0)
          (coordenada3 0 0 0 (get-mouse-click ventana1))           
  )
)


;**************************************************************************
; Hace un filtro de la ficha que se encuentra en la pocision seleccionada *
; y de acuerdo a esto establece los parametro permitidos del movimiento   *
;**************************************************************************

(define (pregunta d e)
  (if (equal? d "vacio.gif")
      (coordenada 0 0 0 (get-mouse-click ventana1))
      (cond
        ((equal? d "peon.gif")(click 1 e ))
        ((equal? d "torre.gif")(click 2 e ))
        ((equal? d "caballo.gif")(click 3 e))
        ((equal? d "alfil.gif")(click 4 e))
        ((equal? d "reina.gif")(click 5 e))
        ((equal? d "rey.gif")(click 6 e))
        ((equal? d "vacio.gif")(coordenada 0 0 0 (get-mouse-click ventana1)))
        (else (coordenada 0 0 0 (get-mouse-click ventana1))) 
   )
 )
)
(define (pregunta2 d e)
  (if (equal? d "vacio.gif")
      (coordenada3 0 0 0 (get-mouse-click ventana1))
      (cond
        ((equal? d "peon2.gif")(click3 7 e ))
        ((equal? d "torre2.gif")(click3 8 e ))
        ((equal? d "caballo2.gif")(click3 9 e))
        ((equal? d "alfil2.gif")(click3 10 e))
        ((equal? d "reina2.gif")(click3 11 e))
        ((equal? d "rey2.gif")(click3 12 e))
        ((equal? d "vacio.gif")(coordenada3 0 0 0 (get-mouse-click ventana1)))
        (else (coordenada3 0 0 0 (get-mouse-click ventana1))) 
   )
 )
)

;************************************************************
; Transforma las coordenadas del mouse para que el programa *
; las pueda ejecutar                                        *
;************************************************************ 
 (define (coordenada e f d click)
   (if (< e 64) 
      (if (and (< f 8)(< d 8))
        (if (and (>= (posn-x (mouse-click-posn click))(vector-ref abcisas f))(<= (posn-x (mouse-click-posn click)) (vector-ref abcisas (+ f 1)))(>= (posn-y (mouse-click-posn click)) (vector-ref ordenadas d))(<= (posn-y (mouse-click-posn click))(vector-ref ordenadas (+ d 1))))
            (begin
              (pregunta (que_hay2? (vector-ref posiciones e))(vector-ref posiciones e))
             )
            (coordenada (+ e 1) f (+ d 1) click)
        )
        (coordenada e  (+ f 1) 0 click)
       )
          (coordenada 0 0 0 (get-mouse-click ventana1))
   ) 
  )
  (define (coordenada2 t e f d s click)
   (if (< e 64)
      (if (and (< f 8)(< d 8))
        (if (and (>= (posn-x (mouse-click-posn click))(vector-ref abcisas f))(<= (posn-x (mouse-click-posn click)) (vector-ref abcisas (+ f 1)))(>= (posn-y (mouse-click-posn click)) (vector-ref ordenadas d))(<= (posn-y (mouse-click-posn click))(vector-ref ordenadas (+ d 1))))
            (begin
              (click2 t s (vector-ref posiciones e))
             )
            (coordenada2 t (+ e 1) f (+ d 1) s click)
        )
        (coordenada2 t e  (+ f 1) 0 s click)
       )
      (coordenada 0 0 0 (get-mouse-click ventana1)) 
   )
  )      
 (define (coordenada3 e f d click)
   (if (< e 64) 
      (if (and (< f 8)(< d 8))
        (if (and (>= (posn-x (mouse-click-posn click))(vector-ref abcisas f))(<= (posn-x (mouse-click-posn click)) (vector-ref abcisas (+ f 1)))(>= (posn-y (mouse-click-posn click)) (vector-ref ordenadas d))(<= (posn-y (mouse-click-posn click))(vector-ref ordenadas (+ d 1))))
            (begin
              (pregunta2 (que_hay2? (vector-ref posiciones e))(vector-ref posiciones e))
             )
            (coordenada3 (+ e 1) f (+ d 1) click)
        )
        (coordenada3 e  (+ f 1) 0 click)
       )
       (coordenada3 0 0 0 (get-mouse-click ventana1))  
   ) 
  )
 (define (coordenada4 t e f d s click)
   (if (< e 64)
      (if (and (< f 8)(< d 8))
        (if (and (>= (posn-x (mouse-click-posn click))(vector-ref abcisas f))(<= (posn-x (mouse-click-posn click)) (vector-ref abcisas (+ f 1)))(>= (posn-y (mouse-click-posn click)) (vector-ref ordenadas d))(<= (posn-y (mouse-click-posn click))(vector-ref ordenadas (+ d 1))))
            (begin
              (click4 t s (vector-ref posiciones e))
             )
            (coordenada4 t (+ e 1) f (+ d 1) s click)
        )
        (coordenada4 t e  (+ f 1) 0 s click)
       )
      (coordenada3 0 0 0 (get-mouse-click ventana1)) 
   )
  )

; (define (control click)
;        (cond
;          (and (>= (posn-x (mouse-click-posn click))(vector-ref abcisas f))(<= (posn-x (mouse-click-posn click)) (vector-ref abcisas (+ f 1)))(>= (posn-y (mouse-click-posn click)) (vector-ref ordenadas d))(<= (posn-y (mouse-click-posn click))(vector-ref ordenadas (+ d 1))))

;************************************************
; Dibujo del menu que define los modos de juego *_______________________________________________________________________________________________________
;************************************************

(define ventana2 (open-viewport "MENU"  300 325))
((draw-solid-rectangle ventana2) (make-posn 50 100) 200 50 "gray")
((draw-rectangle ventana2) (make-posn 50 100) 200 50 "black")

((draw-solid-rectangle ventana2) (make-posn 50 175) 200 50 "gray")
((draw-rectangle ventana2) (make-posn 50 175) 200 50 "black")

((draw-string ventana2)(make-posn 80 50) "AJEDREZ CLASICO " "black")
((draw-string ventana2)(make-posn 80 130) "PARTIDA  RAPIDA" "white")
((draw-string ventana2)(make-posn 90 205) "MINIJUEGO" "white")


;**************************************************
; Son las funciones que etablecen los parametros  *_____________________________________________________________________________________________________________
; para cada problema                              *
;**************************************************

(define (problemauno x)
  (begin
    (borrar a1)
    (borrar c1)
    (borrar d1)
    (borrar e1)
    (borrar f1)
    (borrar h1)
    (borrar b2)
    (borrar c2)
    (borrar d2)
    (borrar a3)
    (borrar c7)
    (borrar d7)
    (borrar e7)
    (borrar b8)
    (borrar d8)
    (borrar e8)
    (borrar g8)
    (borrar b1)
    (borrar e2)
    (borrar g1)
    (borrar f8)
    (borrar h8)
    (vector-set! uno 0 "vacio.gif")
    (vector-set! uno 1 "torre.gif")
    (vector-set! uno 2 "vacio.gif")
    (vector-set! uno 3 "vacio.gif")
    (vector-set! uno 4 "vacio.gif")
    (vector-set! uno 5 "vacio.gif")
    (vector-set! uno 6 "rey.gif")
    (vector-set! uno 7 "vacio.gif")
    (vector-set! dos 1 "vacio.gif")
    (vector-set! dos 2 "vacio.gif")
    (vector-set! dos 3 "vacio.gif")
    (vector-set! dos 4 "reina.gif")
    (vector-set! tres 1 "alfil.gif")
    (vector-set! cinco 2 "reina2.gif")
    (vector-set! cinco 5 "peon2.gif")
    (vector-set! seis 2 "peon2.gif")
    (vector-set! siete 2 "vacio.gif")
    (vector-set! siete 3 "vacio.gif")
    (vector-set! siete 4 "vacio.gif")
    (vector-set! siete 5 "torre.gif")
    (vector-set! ocho 1 "vacio.gif")
    (vector-set! ocho 3 "vacio.gif")
    (vector-set! ocho 4 "vacio.gif")
    (vector-set! ocho 5 "torre2.gif")
    (vector-set! ocho 6 "vacio.gif")
    (vector-set! ocho 7 "rey2.gif")
    (dibujo 0)
    (coordenada 0 0 0 (get-mouse-click ventana1)) 
  )
)
    
;*******************************************
; Establece el problema que se va efectuar *_______________________________________________________________________________________________________________________________________
;*******************************************

(define (dibujo n)
  (if (< n 64)
      (begin
      (dibujar (vector-ref posiciones n))
      (dibujo (+ n 1)) 
      )
      "fin"
  )
)
(define (minijuego c)
  (cond
    ((= c 0)(problemauno 0))
    (else "no")
  )
)
(define (control click)
    (cond
      ((and (>= (posn-x (mouse-click-posn click)) 50)(<= (posn-x (mouse-click-posn click))250)(>= (posn-y (mouse-click-posn click))100)(<= (posn-y (mouse-click-posn click))150))(begin
                                                                                                                                                                                   (close-viewport ventana2)
                                                                                                                                                                                   (coordenada 0 0 0 (get-mouse-click ventana1))))
      ((and (>= (posn-x (mouse-click-posn click)) 50)(<= (posn-x (mouse-click-posn click))250)(>= (posn-y (mouse-click-posn click))175)(<= (posn-y (mouse-click-posn click))225))(begin
                                                                                                                                                                                   (close-viewport ventana2)
                                                                                                                                                                                   (minijuego 0)))
      (else (control (get-mouse-click ventana2)))
    )
)
(control (get-mouse-click ventana2))
 
 